// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proto/proio.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proto/proio.pb.h"

#include <algorithm>

#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace proio {
namespace proto {
class MetaDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Meta> _instance;
} _Meta_default_instance_;
class BucketHeaderDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<BucketHeader> _instance;
} _BucketHeader_default_instance_;
class TagDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Tag> _instance;
} _Tag_default_instance_;
class EntryDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Entry> _instance;
} _Entry_default_instance_;
class Event_TagsEntryDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Event::Event_TagsEntry> _instance;
} _Event_TagsEntry_default_instance_;
class Event_EntriesEntryDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Event::Event_EntriesEntry> _instance;
} _Event_EntriesEntry_default_instance_;
class Event_TypesEntryDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Event::Event_TypesEntry> _instance;
} _Event_TypesEntry_default_instance_;
class EventDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Event> _instance;
} _Event_default_instance_;

namespace protobuf_proto_2fproio_2eproto {

namespace {

::google::protobuf::Metadata file_level_metadata[8];
const ::google::protobuf::EnumDescriptor* file_level_enum_descriptors[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR::google::protobuf::internal::ParseTableField const
    TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR::google::protobuf::internal::AuxillaryParseTableField const
    TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false}, {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false}, {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false}, {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false}, {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meta, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meta, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Meta, data_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketHeader, nevents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketHeader, bucketsize_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketHeader, compression_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketHeader, filedescriptors_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(BucketHeader, metadata_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Tag, entries_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entry, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entry, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Entry, payload_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, tags_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, nentries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, entries_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, ntypes_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, types_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Event, timestamp_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    {0, -1, sizeof(Meta)},   {7, -1, sizeof(BucketHeader)}, {17, -1, sizeof(Tag)},
    {23, -1, sizeof(Entry)}, {30, -1, sizeof(Event)},
};

static ::google::protobuf::Message const* const file_default_instances[] = {
    reinterpret_cast<const ::google::protobuf::Message*>(&_Meta_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_BucketHeader_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_Tag_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_Entry_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_Event_TagsEntry_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_Event_EntriesEntry_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_Event_TypesEntry_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_Event_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
    AddDescriptors();
    ::google::protobuf::MessageFactory* factory = NULL;
    AssignDescriptors("proto/proio.proto", schemas, file_default_instances, TableStruct::offsets, factory,
                      file_level_metadata, file_level_enum_descriptors, NULL);
    file_level_metadata[4].reflection = Event::Event_TagsEntry::CreateReflection(
        file_level_metadata[4].descriptor, _Event_TagsEntry_default_instance_._instance.get_mutable());
    file_level_metadata[5].reflection = Event::Event_EntriesEntry::CreateReflection(
        file_level_metadata[5].descriptor, _Event_EntriesEntry_default_instance_._instance.get_mutable());
    file_level_metadata[6].reflection = Event::Event_TypesEntry::CreateReflection(
        file_level_metadata[6].descriptor, _Event_TypesEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
    static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
    ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
    protobuf_AssignDescriptorsOnce();
    ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 8);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
    GOOGLE_PROTOBUF_VERIFY_VERSION;

    ::google::protobuf::internal::InitProtobufDefaults();
    _Meta_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Meta_default_instance_);
    _BucketHeader_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_BucketHeader_default_instance_);
    _Tag_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Tag_default_instance_);
    _Entry_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Entry_default_instance_);
    _Event_TagsEntry_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Event_TagsEntry_default_instance_);
    _Event_EntriesEntry_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Event_EntriesEntry_default_instance_);
    _Event_TypesEntry_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Event_TypesEntry_default_instance_);
    _Event_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Event_default_instance_);
    _Event_TagsEntry_default_instance_._instance.get_mutable()->set_default_instance(
        _Event_TagsEntry_default_instance_._instance.get_mutable());
    _Event_TagsEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
    _Event_EntriesEntry_default_instance_._instance.get_mutable()->set_default_instance(
        _Event_EntriesEntry_default_instance_._instance.get_mutable());
    _Event_EntriesEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
    _Event_TypesEntry_default_instance_._instance.get_mutable()->set_default_instance(
        _Event_TypesEntry_default_instance_._instance.get_mutable());
    _Event_TypesEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
    static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
    ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
    InitDefaults();
    static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        "\n\021proto/proio.proto\022\013proio.proto\"\"\n\004Meta"
        "\022\014\n\004name\030\001 \001(\t\022\014\n\004data\030\002 \001(\014\"\323\001\n\014BucketH"
        "eader\022\017\n\007nEvents\030\001 \001(\004\022\022\n\nbucketSize\030\002 \001"
        "(\004\0227\n\013compression\030\003 \001(\0162\".proio.proto.Bu"
        "cketHeader.CompType\022\027\n\017fileDescriptors\030\004"
        " \003(\014\022#\n\010metaData\030\005 \003(\0132\021.proio.proto.Met"
        "a\"\'\n\010CompType\022\010\n\004NONE\020\000\022\010\n\004GZIP\020\001\022\007\n\003LZ4"
        "\020\002\"\026\n\003Tag\022\017\n\007entries\030\001 \003(\004\"&\n\005Entry\022\014\n\004t"
        "ype\030\001 \001(\004\022\017\n\007payload\030\002 \001(\014\"\371\002\n\005Event\022*\n\004"
        "tags\030\001 \003(\0132\034.proio.proto.Event.TagsEntry"
        "\022\020\n\010nEntries\030\002 \001(\004\0220\n\007entries\030\003 \003(\0132\037.pr"
        "oio.proto.Event.EntriesEntry\022\016\n\006nTypes\030\004"
        " \001(\004\022,\n\005types\030\005 \003(\0132\035.proio.proto.Event."
        "TypesEntry\022\021\n\ttimestamp\030\006 \001(\004\032=\n\tTagsEnt"
        "ry\022\013\n\003key\030\001 \001(\t\022\037\n\005value\030\002 \001(\0132\020.proio.p"
        "roto.Tag:\0028\001\032B\n\014EntriesEntry\022\013\n\003key\030\001 \001("
        "\004\022!\n\005value\030\002 \001(\0132\022.proio.proto.Entry:\0028\001"
        "\032,\n\nTypesEntry\022\013\n\003key\030\001 \001(\004\022\r\n\005value\030\002 \001"
        "(\t:\0028\001B=\n\005proioB\005ProtoZ-github.com/decib"
        "elcooper/proio/go-proio/protob\006proto3"};
    ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor, 797);
    ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("proto/proio.proto",
                                                                      &protobuf_RegisterTypes);
}
}  // anonymous namespace

void AddDescriptors() {
    static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
    ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
    StaticDescriptorInitializer() { AddDescriptors(); }
} static_descriptor_initializer;

}  // namespace protobuf_proto_2fproio_2eproto

const ::google::protobuf::EnumDescriptor* BucketHeader_CompType_descriptor() {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_enum_descriptors[0];
}
bool BucketHeader_CompType_IsValid(int value) {
    switch (value) {
        case 0:
        case 1:
        case 2:
            return true;
        default:
            return false;
    }
}

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const BucketHeader_CompType BucketHeader::NONE;
const BucketHeader_CompType BucketHeader::GZIP;
const BucketHeader_CompType BucketHeader::LZ4;
const BucketHeader_CompType BucketHeader::CompType_MIN;
const BucketHeader_CompType BucketHeader::CompType_MAX;
const int BucketHeader::CompType_ARRAYSIZE;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Meta::kNameFieldNumber;
const int Meta::kDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Meta::Meta() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_proto_2fproio_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.proto.Meta)
}
Meta::Meta(const Meta& from) : ::google::protobuf::Message(), _internal_metadata_(NULL), _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (from.name().size() > 0) {
        name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (from.data().size() > 0) {
        data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
    // @@protoc_insertion_point(copy_constructor:proio.proto.Meta)
}

void Meta::SharedCtor() {
    name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    data_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    _cached_size_ = 0;
}

Meta::~Meta() {
    // @@protoc_insertion_point(destructor:proio.proto.Meta)
    SharedDtor();
}

void Meta::SharedDtor() {
    name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    data_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Meta::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Meta::descriptor() {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Meta& Meta::default_instance() {
    protobuf_proto_2fproio_2eproto::InitDefaults();
    return *internal_default_instance();
}

Meta* Meta::New(::google::protobuf::Arena* arena) const {
    Meta* n = new Meta;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void Meta::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.proto.Meta)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    _internal_metadata_.Clear();
}

bool Meta::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.proto.Meta)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // string name = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(input,
                                                                                 this->mutable_name()));
                    DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                        this->name().data(), static_cast<int>(this->name().length()),
                        ::google::protobuf::internal::WireFormatLite::PARSE, "proio.proto.Meta.name"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // bytes data = 2;
            case 2: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(input, this->mutable_data()));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.proto.Meta)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.proto.Meta)
    return false;
#undef DO_
}

void Meta::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.proto.Meta)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // string name = 1;
    if (this->name().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proio.proto.Meta.name");
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, this->name(), output);
    }

    // bytes data = 2;
    if (this->data().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(2, this->data(), output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.proto.Meta)
}

::google::protobuf::uint8* Meta::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.proto.Meta)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // string name = 1;
    if (this->name().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proio.proto.Meta.name");
        target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(1, this->name(), target);
    }

    // bytes data = 2;
    if (this->data().size() > 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(2, this->data(), target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.proto.Meta)
    return target;
}

size_t Meta::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.proto.Meta)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // string name = 1;
    if (this->name().size() > 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->name());
    }

    // bytes data = 2;
    if (this->data().size() > 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(this->data());
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void Meta::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.proto.Meta)
    GOOGLE_DCHECK_NE(&from, this);
    const Meta* source = ::google::protobuf::internal::DynamicCastToGenerated<const Meta>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.proto.Meta)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.proto.Meta)
        MergeFrom(*source);
    }
}

void Meta::MergeFrom(const Meta& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.proto.Meta)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    if (from.name().size() > 0) {
        name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.data().size() > 0) {
        data_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.data_);
    }
}

void Meta::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.proto.Meta)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void Meta::CopyFrom(const Meta& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.proto.Meta)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool Meta::IsInitialized() const { return true; }

void Meta::Swap(Meta* other) {
    if (other == this) return;
    InternalSwap(other);
}
void Meta::InternalSwap(Meta* other) {
    using std::swap;
    name_.Swap(&other->name_);
    data_.Swap(&other->data_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Meta::GetMetadata() const {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Meta

// string name = 1;
void Meta::clear_name() {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Meta::name() const {
    // @@protoc_insertion_point(field_get:proio.proto.Meta.name)
    return name_.GetNoArena();
}
void Meta::set_name(const ::std::string& value) {
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:proio.proto.Meta.name)
}
#if LANG_CXX11
void Meta::set_name(::std::string&& value) {
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
    // @@protoc_insertion_point(field_set_rvalue:proio.proto.Meta.name)
}
#endif
void Meta::set_name(const char* value) {
    GOOGLE_DCHECK(value != NULL);

    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:proio.proto.Meta.name)
}
void Meta::set_name(const char* value, size_t size) {
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                     ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:proio.proto.Meta.name)
}
::std::string* Meta::mutable_name() {
    // @@protoc_insertion_point(field_mutable:proio.proto.Meta.name)
    return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Meta::release_name() {
    // @@protoc_insertion_point(field_release:proio.proto.Meta.name)

    return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Meta::set_allocated_name(::std::string* name) {
    if (name != NULL) {
    } else {
    }
    name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
    // @@protoc_insertion_point(field_set_allocated:proio.proto.Meta.name)
}

// bytes data = 2;
void Meta::clear_data() {
    data_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Meta::data() const {
    // @@protoc_insertion_point(field_get:proio.proto.Meta.data)
    return data_.GetNoArena();
}
void Meta::set_data(const ::std::string& value) {
    data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:proio.proto.Meta.data)
}
#if LANG_CXX11
void Meta::set_data(::std::string&& value) {
    data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
    // @@protoc_insertion_point(field_set_rvalue:proio.proto.Meta.data)
}
#endif
void Meta::set_data(const char* value) {
    GOOGLE_DCHECK(value != NULL);

    data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:proio.proto.Meta.data)
}
void Meta::set_data(const void* value, size_t size) {
    data_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                     ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:proio.proto.Meta.data)
}
::std::string* Meta::mutable_data() {
    // @@protoc_insertion_point(field_mutable:proio.proto.Meta.data)
    return data_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Meta::release_data() {
    // @@protoc_insertion_point(field_release:proio.proto.Meta.data)

    return data_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Meta::set_allocated_data(::std::string* data) {
    if (data != NULL) {
    } else {
    }
    data_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), data);
    // @@protoc_insertion_point(field_set_allocated:proio.proto.Meta.data)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int BucketHeader::kNEventsFieldNumber;
const int BucketHeader::kBucketSizeFieldNumber;
const int BucketHeader::kCompressionFieldNumber;
const int BucketHeader::kFileDescriptorsFieldNumber;
const int BucketHeader::kMetaDataFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

BucketHeader::BucketHeader() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_proto_2fproio_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.proto.BucketHeader)
}
BucketHeader::BucketHeader(const BucketHeader& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      filedescriptors_(from.filedescriptors_),
      metadata_(from.metadata_),
      _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::memcpy(
        &nevents_, &from.nevents_,
        static_cast<size_t>(reinterpret_cast<char*>(&compression_) - reinterpret_cast<char*>(&nevents_)) +
            sizeof(compression_));
    // @@protoc_insertion_point(copy_constructor:proio.proto.BucketHeader)
}

void BucketHeader::SharedCtor() {
    ::memset(
        &nevents_, 0,
        static_cast<size_t>(reinterpret_cast<char*>(&compression_) - reinterpret_cast<char*>(&nevents_)) +
            sizeof(compression_));
    _cached_size_ = 0;
}

BucketHeader::~BucketHeader() {
    // @@protoc_insertion_point(destructor:proio.proto.BucketHeader)
    SharedDtor();
}

void BucketHeader::SharedDtor() {}

void BucketHeader::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* BucketHeader::descriptor() {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const BucketHeader& BucketHeader::default_instance() {
    protobuf_proto_2fproio_2eproto::InitDefaults();
    return *internal_default_instance();
}

BucketHeader* BucketHeader::New(::google::protobuf::Arena* arena) const {
    BucketHeader* n = new BucketHeader;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void BucketHeader::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.proto.BucketHeader)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    filedescriptors_.Clear();
    metadata_.Clear();
    ::memset(
        &nevents_, 0,
        static_cast<size_t>(reinterpret_cast<char*>(&compression_) - reinterpret_cast<char*>(&nevents_)) +
            sizeof(compression_));
    _internal_metadata_.Clear();
}

bool BucketHeader::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.proto.BucketHeader)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // uint64 nEvents = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(input, &nevents_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint64 bucketSize = 2;
            case 2: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(input, &bucketsize_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // .proio.proto.BucketHeader.CompType compression = 3;
            case 3: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
                    int value;
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         int, ::google::protobuf::internal::WireFormatLite::TYPE_ENUM>(input, &value)));
                    set_compression(static_cast< ::proio::proto::BucketHeader_CompType>(value));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // repeated bytes fileDescriptors = 4;
            case 4: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(34u /* 34 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(input,
                                                                                this->add_filedescriptors()));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // repeated .proio.proto.Meta metaData = 5;
            case 5: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(input,
                                                                                           add_metadata()));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.proto.BucketHeader)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.proto.BucketHeader)
    return false;
#undef DO_
}

void BucketHeader::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.proto.BucketHeader)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // uint64 nEvents = 1;
    if (this->nevents() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->nevents(), output);
    }

    // uint64 bucketSize = 2;
    if (this->bucketsize() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->bucketsize(), output);
    }

    // .proio.proto.BucketHeader.CompType compression = 3;
    if (this->compression() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteEnum(3, this->compression(), output);
    }

    // repeated bytes fileDescriptors = 4;
    for (int i = 0, n = this->filedescriptors_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteBytes(4, this->filedescriptors(i), output);
    }

    // repeated .proio.proto.Meta metaData = 5;
    for (unsigned int i = 0, n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            5, this->metadata(static_cast<int>(i)), output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.proto.BucketHeader)
}

::google::protobuf::uint8* BucketHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.proto.BucketHeader)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // uint64 nEvents = 1;
    if (this->nevents() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->nevents(), target);
    }

    // uint64 bucketSize = 2;
    if (this->bucketsize() != 0) {
        target =
            ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->bucketsize(), target);
    }

    // .proio.proto.BucketHeader.CompType compression = 3;
    if (this->compression() != 0) {
        target =
            ::google::protobuf::internal::WireFormatLite::WriteEnumToArray(3, this->compression(), target);
    }

    // repeated bytes fileDescriptors = 4;
    for (int i = 0, n = this->filedescriptors_size(); i < n; i++) {
        target = ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(4, this->filedescriptors(i),
                                                                                 target);
    }

    // repeated .proio.proto.Meta metaData = 5;
    for (unsigned int i = 0, n = static_cast<unsigned int>(this->metadata_size()); i < n; i++) {
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
            5, this->metadata(static_cast<int>(i)), deterministic, target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.proto.BucketHeader)
    return target;
}

size_t BucketHeader::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.proto.BucketHeader)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // repeated bytes fileDescriptors = 4;
    total_size += 1 * ::google::protobuf::internal::FromIntSize(this->filedescriptors_size());
    for (int i = 0, n = this->filedescriptors_size(); i < n; i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::BytesSize(this->filedescriptors(i));
    }

    // repeated .proio.proto.Meta metaData = 5;
    {
        unsigned int count = static_cast<unsigned int>(this->metadata_size());
        total_size += 1UL * count;
        for (unsigned int i = 0; i < count; i++) {
            total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                this->metadata(static_cast<int>(i)));
        }
    }

    // uint64 nEvents = 1;
    if (this->nevents() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->nevents());
    }

    // uint64 bucketSize = 2;
    if (this->bucketsize() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->bucketsize());
    }

    // .proio.proto.BucketHeader.CompType compression = 3;
    if (this->compression() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::EnumSize(this->compression());
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void BucketHeader::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.proto.BucketHeader)
    GOOGLE_DCHECK_NE(&from, this);
    const BucketHeader* source =
        ::google::protobuf::internal::DynamicCastToGenerated<const BucketHeader>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.proto.BucketHeader)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.proto.BucketHeader)
        MergeFrom(*source);
    }
}

void BucketHeader::MergeFrom(const BucketHeader& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.proto.BucketHeader)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    filedescriptors_.MergeFrom(from.filedescriptors_);
    metadata_.MergeFrom(from.metadata_);
    if (from.nevents() != 0) {
        set_nevents(from.nevents());
    }
    if (from.bucketsize() != 0) {
        set_bucketsize(from.bucketsize());
    }
    if (from.compression() != 0) {
        set_compression(from.compression());
    }
}

void BucketHeader::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.proto.BucketHeader)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void BucketHeader::CopyFrom(const BucketHeader& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.proto.BucketHeader)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool BucketHeader::IsInitialized() const { return true; }

void BucketHeader::Swap(BucketHeader* other) {
    if (other == this) return;
    InternalSwap(other);
}
void BucketHeader::InternalSwap(BucketHeader* other) {
    using std::swap;
    filedescriptors_.InternalSwap(&other->filedescriptors_);
    metadata_.InternalSwap(&other->metadata_);
    swap(nevents_, other->nevents_);
    swap(bucketsize_, other->bucketsize_);
    swap(compression_, other->compression_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata BucketHeader::GetMetadata() const {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// BucketHeader

// uint64 nEvents = 1;
void BucketHeader::clear_nevents() { nevents_ = GOOGLE_ULONGLONG(0); }
::google::protobuf::uint64 BucketHeader::nevents() const {
    // @@protoc_insertion_point(field_get:proio.proto.BucketHeader.nEvents)
    return nevents_;
}
void BucketHeader::set_nevents(::google::protobuf::uint64 value) {
    nevents_ = value;
    // @@protoc_insertion_point(field_set:proio.proto.BucketHeader.nEvents)
}

// uint64 bucketSize = 2;
void BucketHeader::clear_bucketsize() { bucketsize_ = GOOGLE_ULONGLONG(0); }
::google::protobuf::uint64 BucketHeader::bucketsize() const {
    // @@protoc_insertion_point(field_get:proio.proto.BucketHeader.bucketSize)
    return bucketsize_;
}
void BucketHeader::set_bucketsize(::google::protobuf::uint64 value) {
    bucketsize_ = value;
    // @@protoc_insertion_point(field_set:proio.proto.BucketHeader.bucketSize)
}

// .proio.proto.BucketHeader.CompType compression = 3;
void BucketHeader::clear_compression() { compression_ = 0; }
::proio::proto::BucketHeader_CompType BucketHeader::compression() const {
    // @@protoc_insertion_point(field_get:proio.proto.BucketHeader.compression)
    return static_cast< ::proio::proto::BucketHeader_CompType>(compression_);
}
void BucketHeader::set_compression(::proio::proto::BucketHeader_CompType value) {
    compression_ = value;
    // @@protoc_insertion_point(field_set:proio.proto.BucketHeader.compression)
}

// repeated bytes fileDescriptors = 4;
int BucketHeader::filedescriptors_size() const { return filedescriptors_.size(); }
void BucketHeader::clear_filedescriptors() { filedescriptors_.Clear(); }
const ::std::string& BucketHeader::filedescriptors(int index) const {
    // @@protoc_insertion_point(field_get:proio.proto.BucketHeader.fileDescriptors)
    return filedescriptors_.Get(index);
}
::std::string* BucketHeader::mutable_filedescriptors(int index) {
    // @@protoc_insertion_point(field_mutable:proio.proto.BucketHeader.fileDescriptors)
    return filedescriptors_.Mutable(index);
}
void BucketHeader::set_filedescriptors(int index, const ::std::string& value) {
    // @@protoc_insertion_point(field_set:proio.proto.BucketHeader.fileDescriptors)
    filedescriptors_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void BucketHeader::set_filedescriptors(int index, ::std::string&& value) {
    // @@protoc_insertion_point(field_set:proio.proto.BucketHeader.fileDescriptors)
    filedescriptors_.Mutable(index)->assign(std::move(value));
}
#endif
void BucketHeader::set_filedescriptors(int index, const char* value) {
    GOOGLE_DCHECK(value != NULL);
    filedescriptors_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:proio.proto.BucketHeader.fileDescriptors)
}
void BucketHeader::set_filedescriptors(int index, const void* value, size_t size) {
    filedescriptors_.Mutable(index)->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:proio.proto.BucketHeader.fileDescriptors)
}
::std::string* BucketHeader::add_filedescriptors() {
    // @@protoc_insertion_point(field_add_mutable:proio.proto.BucketHeader.fileDescriptors)
    return filedescriptors_.Add();
}
void BucketHeader::add_filedescriptors(const ::std::string& value) {
    filedescriptors_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:proio.proto.BucketHeader.fileDescriptors)
}
#if LANG_CXX11
void BucketHeader::add_filedescriptors(::std::string&& value) {
    filedescriptors_.Add(std::move(value));
    // @@protoc_insertion_point(field_add:proio.proto.BucketHeader.fileDescriptors)
}
#endif
void BucketHeader::add_filedescriptors(const char* value) {
    GOOGLE_DCHECK(value != NULL);
    filedescriptors_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:proio.proto.BucketHeader.fileDescriptors)
}
void BucketHeader::add_filedescriptors(const void* value, size_t size) {
    filedescriptors_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:proio.proto.BucketHeader.fileDescriptors)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>& BucketHeader::filedescriptors() const {
    // @@protoc_insertion_point(field_list:proio.proto.BucketHeader.fileDescriptors)
    return filedescriptors_;
}
::google::protobuf::RepeatedPtrField< ::std::string>* BucketHeader::mutable_filedescriptors() {
    // @@protoc_insertion_point(field_mutable_list:proio.proto.BucketHeader.fileDescriptors)
    return &filedescriptors_;
}

// repeated .proio.proto.Meta metaData = 5;
int BucketHeader::metadata_size() const { return metadata_.size(); }
void BucketHeader::clear_metadata() { metadata_.Clear(); }
const ::proio::proto::Meta& BucketHeader::metadata(int index) const {
    // @@protoc_insertion_point(field_get:proio.proto.BucketHeader.metaData)
    return metadata_.Get(index);
}
::proio::proto::Meta* BucketHeader::mutable_metadata(int index) {
    // @@protoc_insertion_point(field_mutable:proio.proto.BucketHeader.metaData)
    return metadata_.Mutable(index);
}
::proio::proto::Meta* BucketHeader::add_metadata() {
    // @@protoc_insertion_point(field_add:proio.proto.BucketHeader.metaData)
    return metadata_.Add();
}
::google::protobuf::RepeatedPtrField< ::proio::proto::Meta>* BucketHeader::mutable_metadata() {
    // @@protoc_insertion_point(field_mutable_list:proio.proto.BucketHeader.metaData)
    return &metadata_;
}
const ::google::protobuf::RepeatedPtrField< ::proio::proto::Meta>& BucketHeader::metadata() const {
    // @@protoc_insertion_point(field_list:proio.proto.BucketHeader.metaData)
    return metadata_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Tag::kEntriesFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Tag::Tag() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_proto_2fproio_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.proto.Tag)
}
Tag::Tag(const Tag& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL), entries_(from.entries_), _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    // @@protoc_insertion_point(copy_constructor:proio.proto.Tag)
}

void Tag::SharedCtor() { _cached_size_ = 0; }

Tag::~Tag() {
    // @@protoc_insertion_point(destructor:proio.proto.Tag)
    SharedDtor();
}

void Tag::SharedDtor() {}

void Tag::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Tag::descriptor() {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Tag& Tag::default_instance() {
    protobuf_proto_2fproio_2eproto::InitDefaults();
    return *internal_default_instance();
}

Tag* Tag::New(::google::protobuf::Arena* arena) const {
    Tag* n = new Tag;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void Tag::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.proto.Tag)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    entries_.Clear();
    _internal_metadata_.Clear();
}

bool Tag::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.proto.Tag)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // repeated uint64 entries = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                        input, this->mutable_entries())));
                } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                           static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                        1, 10u, input, this->mutable_entries())));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.proto.Tag)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.proto.Tag)
    return false;
#undef DO_
}

void Tag::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.proto.Tag)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated uint64 entries = 1;
    if (this->entries_size() > 0) {
        ::google::protobuf::internal::WireFormatLite::WriteTag(
            1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
        output->WriteVarint32(static_cast< ::google::protobuf::uint32>(_entries_cached_byte_size_));
    }
    for (int i = 0, n = this->entries_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(this->entries(i), output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.proto.Tag)
}

::google::protobuf::uint8* Tag::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.proto.Tag)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated uint64 entries = 1;
    if (this->entries_size() > 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
            1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, target);
        target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
            static_cast< ::google::protobuf::uint32>(_entries_cached_byte_size_), target);
        target =
            ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTagToArray(this->entries_, target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.proto.Tag)
    return target;
}

size_t Tag::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.proto.Tag)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // repeated uint64 entries = 1;
    {
        size_t data_size = ::google::protobuf::internal::WireFormatLite::UInt64Size(this->entries_);
        if (data_size > 0) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                                  static_cast< ::google::protobuf::int32>(data_size));
        }
        int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _entries_cached_byte_size_ = cached_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        total_size += data_size;
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void Tag::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.proto.Tag)
    GOOGLE_DCHECK_NE(&from, this);
    const Tag* source = ::google::protobuf::internal::DynamicCastToGenerated<const Tag>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.proto.Tag)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.proto.Tag)
        MergeFrom(*source);
    }
}

void Tag::MergeFrom(const Tag& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.proto.Tag)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    entries_.MergeFrom(from.entries_);
}

void Tag::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.proto.Tag)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void Tag::CopyFrom(const Tag& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.proto.Tag)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool Tag::IsInitialized() const { return true; }

void Tag::Swap(Tag* other) {
    if (other == this) return;
    InternalSwap(other);
}
void Tag::InternalSwap(Tag* other) {
    using std::swap;
    entries_.InternalSwap(&other->entries_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Tag::GetMetadata() const {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Tag

// repeated uint64 entries = 1;
int Tag::entries_size() const { return entries_.size(); }
void Tag::clear_entries() { entries_.Clear(); }
::google::protobuf::uint64 Tag::entries(int index) const {
    // @@protoc_insertion_point(field_get:proio.proto.Tag.entries)
    return entries_.Get(index);
}
void Tag::set_entries(int index, ::google::protobuf::uint64 value) {
    entries_.Set(index, value);
    // @@protoc_insertion_point(field_set:proio.proto.Tag.entries)
}
void Tag::add_entries(::google::protobuf::uint64 value) {
    entries_.Add(value);
    // @@protoc_insertion_point(field_add:proio.proto.Tag.entries)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64>& Tag::entries() const {
    // @@protoc_insertion_point(field_list:proio.proto.Tag.entries)
    return entries_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64>* Tag::mutable_entries() {
    // @@protoc_insertion_point(field_mutable_list:proio.proto.Tag.entries)
    return &entries_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Entry::kTypeFieldNumber;
const int Entry::kPayloadFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Entry::Entry() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_proto_2fproio_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.proto.Entry)
}
Entry::Entry(const Entry& from) : ::google::protobuf::Message(), _internal_metadata_(NULL), _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (from.payload().size() > 0) {
        payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                                   from.payload_);
    }
    type_ = from.type_;
    // @@protoc_insertion_point(copy_constructor:proio.proto.Entry)
}

void Entry::SharedCtor() {
    payload_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    type_ = GOOGLE_ULONGLONG(0);
    _cached_size_ = 0;
}

Entry::~Entry() {
    // @@protoc_insertion_point(destructor:proio.proto.Entry)
    SharedDtor();
}

void Entry::SharedDtor() {
    payload_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void Entry::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Entry::descriptor() {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Entry& Entry::default_instance() {
    protobuf_proto_2fproio_2eproto::InitDefaults();
    return *internal_default_instance();
}

Entry* Entry::New(::google::protobuf::Arena* arena) const {
    Entry* n = new Entry;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void Entry::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.proto.Entry)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    type_ = GOOGLE_ULONGLONG(0);
    _internal_metadata_.Clear();
}

bool Entry::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.proto.Entry)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // uint64 type = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(input, &type_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // bytes payload = 2;
            case 2: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadBytes(input,
                                                                                this->mutable_payload()));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.proto.Entry)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.proto.Entry)
    return false;
#undef DO_
}

void Entry::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.proto.Entry)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // uint64 type = 1;
    if (this->type() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(1, this->type(), output);
    }

    // bytes payload = 2;
    if (this->payload().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::WriteBytesMaybeAliased(2, this->payload(), output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.proto.Entry)
}

::google::protobuf::uint8* Entry::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.proto.Entry)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // uint64 type = 1;
    if (this->type() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(1, this->type(), target);
    }

    // bytes payload = 2;
    if (this->payload().size() > 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteBytesToArray(2, this->payload(), target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.proto.Entry)
    return target;
}

size_t Entry::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.proto.Entry)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // bytes payload = 2;
    if (this->payload().size() > 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::BytesSize(this->payload());
    }

    // uint64 type = 1;
    if (this->type() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->type());
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void Entry::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.proto.Entry)
    GOOGLE_DCHECK_NE(&from, this);
    const Entry* source = ::google::protobuf::internal::DynamicCastToGenerated<const Entry>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.proto.Entry)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.proto.Entry)
        MergeFrom(*source);
    }
}

void Entry::MergeFrom(const Entry& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.proto.Entry)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    if (from.payload().size() > 0) {
        payload_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                                   from.payload_);
    }
    if (from.type() != 0) {
        set_type(from.type());
    }
}

void Entry::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.proto.Entry)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void Entry::CopyFrom(const Entry& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.proto.Entry)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool Entry::IsInitialized() const { return true; }

void Entry::Swap(Entry* other) {
    if (other == this) return;
    InternalSwap(other);
}
void Entry::InternalSwap(Entry* other) {
    using std::swap;
    payload_.Swap(&other->payload_);
    swap(type_, other->type_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Entry::GetMetadata() const {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Entry

// uint64 type = 1;
void Entry::clear_type() { type_ = GOOGLE_ULONGLONG(0); }
::google::protobuf::uint64 Entry::type() const {
    // @@protoc_insertion_point(field_get:proio.proto.Entry.type)
    return type_;
}
void Entry::set_type(::google::protobuf::uint64 value) {
    type_ = value;
    // @@protoc_insertion_point(field_set:proio.proto.Entry.type)
}

// bytes payload = 2;
void Entry::clear_payload() {
    payload_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& Entry::payload() const {
    // @@protoc_insertion_point(field_get:proio.proto.Entry.payload)
    return payload_.GetNoArena();
}
void Entry::set_payload(const ::std::string& value) {
    payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:proio.proto.Entry.payload)
}
#if LANG_CXX11
void Entry::set_payload(::std::string&& value) {
    payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
    // @@protoc_insertion_point(field_set_rvalue:proio.proto.Entry.payload)
}
#endif
void Entry::set_payload(const char* value) {
    GOOGLE_DCHECK(value != NULL);

    payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:proio.proto.Entry.payload)
}
void Entry::set_payload(const void* value, size_t size) {
    payload_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                        ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:proio.proto.Entry.payload)
}
::std::string* Entry::mutable_payload() {
    // @@protoc_insertion_point(field_mutable:proio.proto.Entry.payload)
    return payload_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* Entry::release_payload() {
    // @@protoc_insertion_point(field_release:proio.proto.Entry.payload)

    return payload_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void Entry::set_allocated_payload(::std::string* payload) {
    if (payload != NULL) {
    } else {
    }
    payload_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), payload);
    // @@protoc_insertion_point(field_set_allocated:proio.proto.Entry.payload)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Event::Event_TagsEntry::Event_TagsEntry() {}
Event::Event_TagsEntry::Event_TagsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Event::Event_TagsEntry::GetMetadata() const {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[4];
}
void Event::Event_TagsEntry::MergeFrom(const ::google::protobuf::Message& other) {
    ::google::protobuf::Message::MergeFrom(other);
}
void Event::Event_TagsEntry::MergeFrom(const Event_TagsEntry& other) { MergeFromInternal(other); }

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Event::Event_EntriesEntry::Event_EntriesEntry() {}
Event::Event_EntriesEntry::Event_EntriesEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Event::Event_EntriesEntry::GetMetadata() const {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[5];
}
void Event::Event_EntriesEntry::MergeFrom(const ::google::protobuf::Message& other) {
    ::google::protobuf::Message::MergeFrom(other);
}
void Event::Event_EntriesEntry::MergeFrom(const Event_EntriesEntry& other) { MergeFromInternal(other); }

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Event::Event_TypesEntry::Event_TypesEntry() {}
Event::Event_TypesEntry::Event_TypesEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Event::Event_TypesEntry::GetMetadata() const {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[6];
}
void Event::Event_TypesEntry::MergeFrom(const ::google::protobuf::Message& other) {
    ::google::protobuf::Message::MergeFrom(other);
}
void Event::Event_TypesEntry::MergeFrom(const Event_TypesEntry& other) { MergeFromInternal(other); }

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Event::kTagsFieldNumber;
const int Event::kNEntriesFieldNumber;
const int Event::kEntriesFieldNumber;
const int Event::kNTypesFieldNumber;
const int Event::kTypesFieldNumber;
const int Event::kTimestampFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Event::Event() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_proto_2fproio_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.proto.Event)
}
Event::Event(const Event& from) : ::google::protobuf::Message(), _internal_metadata_(NULL), _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    tags_.MergeFrom(from.tags_);
    entries_.MergeFrom(from.entries_);
    types_.MergeFrom(from.types_);
    ::memcpy(&nentries_, &from.nentries_,
             static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) - reinterpret_cast<char*>(&nentries_)) +
                 sizeof(timestamp_));
    // @@protoc_insertion_point(copy_constructor:proio.proto.Event)
}

void Event::SharedCtor() {
    ::memset(&nentries_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) - reinterpret_cast<char*>(&nentries_)) +
                 sizeof(timestamp_));
    _cached_size_ = 0;
}

Event::~Event() {
    // @@protoc_insertion_point(destructor:proio.proto.Event)
    SharedDtor();
}

void Event::SharedDtor() {}

void Event::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Event::descriptor() {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Event& Event::default_instance() {
    protobuf_proto_2fproio_2eproto::InitDefaults();
    return *internal_default_instance();
}

Event* Event::New(::google::protobuf::Arena* arena) const {
    Event* n = new Event;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void Event::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.proto.Event)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    tags_.Clear();
    entries_.Clear();
    types_.Clear();
    ::memset(&nentries_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&timestamp_) - reinterpret_cast<char*>(&nentries_)) +
                 sizeof(timestamp_));
    _internal_metadata_.Clear();
}

bool Event::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.proto.Event)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // map<string, .proio.proto.Tag> tags = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
                    Event_TagsEntry::Parser<
                        ::google::protobuf::internal::MapField<
                            Event_TagsEntry, ::std::string, ::proio::proto::Tag,
                            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE, 0>,
                        ::google::protobuf::Map< ::std::string, ::proio::proto::Tag> >
                        parser(&tags_);
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(input, &parser));
                    DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                        parser.key().data(), static_cast<int>(parser.key().length()),
                        ::google::protobuf::internal::WireFormatLite::PARSE,
                        "proio.proto.Event.TagsEntry.key"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint64 nEntries = 2;
            case 2: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(input, &nentries_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // map<uint64, .proio.proto.Entry> entries = 3;
            case 3: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
                    Event_EntriesEntry::Parser<
                        ::google::protobuf::internal::MapField<
                            Event_EntriesEntry, ::google::protobuf::uint64, ::proio::proto::Entry,
                            ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE, 0>,
                        ::google::protobuf::Map< ::google::protobuf::uint64, ::proio::proto::Entry> >
                        parser(&entries_);
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(input, &parser));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint64 nTypes = 4;
            case 4: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(input, &ntypes_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // map<uint64, string> types = 5;
            case 5: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
                    Event_TypesEntry::Parser<
                        ::google::protobuf::internal::MapField<
                            Event_TypesEntry, ::google::protobuf::uint64, ::std::string,
                            ::google::protobuf::internal::WireFormatLite::TYPE_UINT64,
                            ::google::protobuf::internal::WireFormatLite::TYPE_STRING, 0>,
                        ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string> >
                        parser(&types_);
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(input, &parser));
                    DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                        parser.value().data(), static_cast<int>(parser.value().length()),
                        ::google::protobuf::internal::WireFormatLite::PARSE,
                        "proio.proto.Event.TypesEntry.value"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint64 timestamp = 6;
            case 6: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(input, &timestamp_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.proto.Event)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.proto.Event)
    return false;
#undef DO_
}

void Event::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.proto.Event)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // map<string, .proio.proto.Tag> tags = 1;
    if (!this->tags().empty()) {
        typedef ::google::protobuf::Map< ::std::string, ::proio::proto::Tag>::const_pointer ConstPtr;
        typedef ConstPtr SortItem;
        typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
        struct Utf8Check {
            static void Check(ConstPtr p) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    p->first.data(), static_cast<int>(p->first.length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proio.proto.Event.TagsEntry.key");
            }
        };

        if (output->IsSerializationDeterministic() && this->tags().size() > 1) {
            ::google::protobuf::scoped_array<SortItem> items(new SortItem[this->tags().size()]);
            typedef ::google::protobuf::Map< ::std::string, ::proio::proto::Tag>::size_type size_type;
            size_type n = 0;
            for (::google::protobuf::Map< ::std::string, ::proio::proto::Tag>::const_iterator
                     it = this->tags().begin();
                 it != this->tags().end(); ++it, ++n) {
                items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
            }
            ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
            ::google::protobuf::scoped_ptr<Event_TagsEntry> entry;
            for (size_type i = 0; i < n; i++) {
                entry.reset(tags_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first,
                                                  items[static_cast<ptrdiff_t>(i)]->second));
                ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
                Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
            }
        } else {
            ::google::protobuf::scoped_ptr<Event_TagsEntry> entry;
            for (::google::protobuf::Map< ::std::string, ::proio::proto::Tag>::const_iterator it =
                     this->tags().begin();
                 it != this->tags().end(); ++it) {
                entry.reset(tags_.NewEntryWrapper(it->first, it->second));
                ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
                Utf8Check::Check(&*it);
            }
        }
    }

    // uint64 nEntries = 2;
    if (this->nentries() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->nentries(), output);
    }

    // map<uint64, .proio.proto.Entry> entries = 3;
    if (!this->entries().empty()) {
        typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proio::proto::Entry>::const_pointer
            ConstPtr;
        typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr> SortItem;
        typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

        if (output->IsSerializationDeterministic() && this->entries().size() > 1) {
            ::google::protobuf::scoped_array<SortItem> items(new SortItem[this->entries().size()]);
            typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proio::proto::Entry>::size_type
                size_type;
            size_type n = 0;
            for (::google::protobuf::Map< ::google::protobuf::uint64, ::proio::proto::Entry>::const_iterator
                     it = this->entries().begin();
                 it != this->entries().end(); ++it, ++n) {
                items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
            }
            ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
            ::google::protobuf::scoped_ptr<Event_EntriesEntry> entry;
            for (size_type i = 0; i < n; i++) {
                entry.reset(entries_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first,
                                                     items[static_cast<ptrdiff_t>(i)].second->second));
                ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
            }
        } else {
            ::google::protobuf::scoped_ptr<Event_EntriesEntry> entry;
            for (::google::protobuf::Map< ::google::protobuf::uint64, ::proio::proto::Entry>::const_iterator
                     it = this->entries().begin();
                 it != this->entries().end(); ++it) {
                entry.reset(entries_.NewEntryWrapper(it->first, it->second));
                ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
            }
        }
    }

    // uint64 nTypes = 4;
    if (this->ntypes() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->ntypes(), output);
    }

    // map<uint64, string> types = 5;
    if (!this->types().empty()) {
        typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string>::const_pointer ConstPtr;
        typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr> SortItem;
        typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
        struct Utf8Check {
            static void Check(ConstPtr p) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    p->second.data(), static_cast<int>(p->second.length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proio.proto.Event.TypesEntry.value");
            }
        };

        if (output->IsSerializationDeterministic() && this->types().size() > 1) {
            ::google::protobuf::scoped_array<SortItem> items(new SortItem[this->types().size()]);
            typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string>::size_type size_type;
            size_type n = 0;
            for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string>::const_iterator
                     it = this->types().begin();
                 it != this->types().end(); ++it, ++n) {
                items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
            }
            ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
            ::google::protobuf::scoped_ptr<Event_TypesEntry> entry;
            for (size_type i = 0; i < n; i++) {
                entry.reset(types_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first,
                                                   items[static_cast<ptrdiff_t>(i)].second->second));
                ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(5, *entry, output);
                Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
            }
        } else {
            ::google::protobuf::scoped_ptr<Event_TypesEntry> entry;
            for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string>::const_iterator it =
                     this->types().begin();
                 it != this->types().end(); ++it) {
                entry.reset(types_.NewEntryWrapper(it->first, it->second));
                ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(5, *entry, output);
                Utf8Check::Check(&*it);
            }
        }
    }

    // uint64 timestamp = 6;
    if (this->timestamp() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(6, this->timestamp(), output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.proto.Event)
}

::google::protobuf::uint8* Event::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.proto.Event)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // map<string, .proio.proto.Tag> tags = 1;
    if (!this->tags().empty()) {
        typedef ::google::protobuf::Map< ::std::string, ::proio::proto::Tag>::const_pointer ConstPtr;
        typedef ConstPtr SortItem;
        typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
        struct Utf8Check {
            static void Check(ConstPtr p) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    p->first.data(), static_cast<int>(p->first.length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proio.proto.Event.TagsEntry.key");
            }
        };

        if (deterministic && this->tags().size() > 1) {
            ::google::protobuf::scoped_array<SortItem> items(new SortItem[this->tags().size()]);
            typedef ::google::protobuf::Map< ::std::string, ::proio::proto::Tag>::size_type size_type;
            size_type n = 0;
            for (::google::protobuf::Map< ::std::string, ::proio::proto::Tag>::const_iterator
                     it = this->tags().begin();
                 it != this->tags().end(); ++it, ++n) {
                items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
            }
            ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
            ::google::protobuf::scoped_ptr<Event_TagsEntry> entry;
            for (size_type i = 0; i < n; i++) {
                entry.reset(tags_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first,
                                                  items[static_cast<ptrdiff_t>(i)]->second));
                target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
                    1, *entry, deterministic, target);
                ;
                Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
            }
        } else {
            ::google::protobuf::scoped_ptr<Event_TagsEntry> entry;
            for (::google::protobuf::Map< ::std::string, ::proio::proto::Tag>::const_iterator it =
                     this->tags().begin();
                 it != this->tags().end(); ++it) {
                entry.reset(tags_.NewEntryWrapper(it->first, it->second));
                target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
                    1, *entry, deterministic, target);
                ;
                Utf8Check::Check(&*it);
            }
        }
    }

    // uint64 nEntries = 2;
    if (this->nentries() != 0) {
        target =
            ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->nentries(), target);
    }

    // map<uint64, .proio.proto.Entry> entries = 3;
    if (!this->entries().empty()) {
        typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proio::proto::Entry>::const_pointer
            ConstPtr;
        typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr> SortItem;
        typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;

        if (deterministic && this->entries().size() > 1) {
            ::google::protobuf::scoped_array<SortItem> items(new SortItem[this->entries().size()]);
            typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::proio::proto::Entry>::size_type
                size_type;
            size_type n = 0;
            for (::google::protobuf::Map< ::google::protobuf::uint64, ::proio::proto::Entry>::const_iterator
                     it = this->entries().begin();
                 it != this->entries().end(); ++it, ++n) {
                items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
            }
            ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
            ::google::protobuf::scoped_ptr<Event_EntriesEntry> entry;
            for (size_type i = 0; i < n; i++) {
                entry.reset(entries_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first,
                                                     items[static_cast<ptrdiff_t>(i)].second->second));
                target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
                    3, *entry, deterministic, target);
                ;
            }
        } else {
            ::google::protobuf::scoped_ptr<Event_EntriesEntry> entry;
            for (::google::protobuf::Map< ::google::protobuf::uint64, ::proio::proto::Entry>::const_iterator
                     it = this->entries().begin();
                 it != this->entries().end(); ++it) {
                entry.reset(entries_.NewEntryWrapper(it->first, it->second));
                target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
                    3, *entry, deterministic, target);
                ;
            }
        }
    }

    // uint64 nTypes = 4;
    if (this->ntypes() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->ntypes(), target);
    }

    // map<uint64, string> types = 5;
    if (!this->types().empty()) {
        typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string>::const_pointer ConstPtr;
        typedef ::google::protobuf::internal::SortItem< ::google::protobuf::uint64, ConstPtr> SortItem;
        typedef ::google::protobuf::internal::CompareByFirstField<SortItem> Less;
        struct Utf8Check {
            static void Check(ConstPtr p) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    p->second.data(), static_cast<int>(p->second.length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proio.proto.Event.TypesEntry.value");
            }
        };

        if (deterministic && this->types().size() > 1) {
            ::google::protobuf::scoped_array<SortItem> items(new SortItem[this->types().size()]);
            typedef ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string>::size_type size_type;
            size_type n = 0;
            for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string>::const_iterator
                     it = this->types().begin();
                 it != this->types().end(); ++it, ++n) {
                items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
            }
            ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
            ::google::protobuf::scoped_ptr<Event_TypesEntry> entry;
            for (size_type i = 0; i < n; i++) {
                entry.reset(types_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)].second->first,
                                                   items[static_cast<ptrdiff_t>(i)].second->second));
                target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
                    5, *entry, deterministic, target);
                ;
                Utf8Check::Check(items[static_cast<ptrdiff_t>(i)].second);
            }
        } else {
            ::google::protobuf::scoped_ptr<Event_TypesEntry> entry;
            for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string>::const_iterator it =
                     this->types().begin();
                 it != this->types().end(); ++it) {
                entry.reset(types_.NewEntryWrapper(it->first, it->second));
                target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
                    5, *entry, deterministic, target);
                ;
                Utf8Check::Check(&*it);
            }
        }
    }

    // uint64 timestamp = 6;
    if (this->timestamp() != 0) {
        target =
            ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(6, this->timestamp(), target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.proto.Event)
    return target;
}

size_t Event::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.proto.Event)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // map<string, .proio.proto.Tag> tags = 1;
    total_size += 1 * ::google::protobuf::internal::FromIntSize(this->tags_size());
    {
        ::google::protobuf::scoped_ptr<Event_TagsEntry> entry;
        for (::google::protobuf::Map< ::std::string, ::proio::proto::Tag>::const_iterator it =
                 this->tags().begin();
             it != this->tags().end(); ++it) {
            entry.reset(tags_.NewEntryWrapper(it->first, it->second));
            total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*entry);
        }
    }

    // map<uint64, .proio.proto.Entry> entries = 3;
    total_size += 1 * ::google::protobuf::internal::FromIntSize(this->entries_size());
    {
        ::google::protobuf::scoped_ptr<Event_EntriesEntry> entry;
        for (::google::protobuf::Map< ::google::protobuf::uint64, ::proio::proto::Entry>::const_iterator it =
                 this->entries().begin();
             it != this->entries().end(); ++it) {
            entry.reset(entries_.NewEntryWrapper(it->first, it->second));
            total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*entry);
        }
    }

    // map<uint64, string> types = 5;
    total_size += 1 * ::google::protobuf::internal::FromIntSize(this->types_size());
    {
        ::google::protobuf::scoped_ptr<Event_TypesEntry> entry;
        for (::google::protobuf::Map< ::google::protobuf::uint64, ::std::string>::const_iterator it =
                 this->types().begin();
             it != this->types().end(); ++it) {
            entry.reset(types_.NewEntryWrapper(it->first, it->second));
            total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*entry);
        }
    }

    // uint64 nEntries = 2;
    if (this->nentries() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->nentries());
    }

    // uint64 nTypes = 4;
    if (this->ntypes() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->ntypes());
    }

    // uint64 timestamp = 6;
    if (this->timestamp() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->timestamp());
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void Event::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.proto.Event)
    GOOGLE_DCHECK_NE(&from, this);
    const Event* source = ::google::protobuf::internal::DynamicCastToGenerated<const Event>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.proto.Event)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.proto.Event)
        MergeFrom(*source);
    }
}

void Event::MergeFrom(const Event& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.proto.Event)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    tags_.MergeFrom(from.tags_);
    entries_.MergeFrom(from.entries_);
    types_.MergeFrom(from.types_);
    if (from.nentries() != 0) {
        set_nentries(from.nentries());
    }
    if (from.ntypes() != 0) {
        set_ntypes(from.ntypes());
    }
    if (from.timestamp() != 0) {
        set_timestamp(from.timestamp());
    }
}

void Event::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.proto.Event)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void Event::CopyFrom(const Event& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.proto.Event)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool Event::IsInitialized() const { return true; }

void Event::Swap(Event* other) {
    if (other == this) return;
    InternalSwap(other);
}
void Event::InternalSwap(Event* other) {
    using std::swap;
    tags_.Swap(&other->tags_);
    entries_.Swap(&other->entries_);
    types_.Swap(&other->types_);
    swap(nentries_, other->nentries_);
    swap(ntypes_, other->ntypes_);
    swap(timestamp_, other->timestamp_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Event::GetMetadata() const {
    protobuf_proto_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proto_2fproio_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Event

// map<string, .proio.proto.Tag> tags = 1;
int Event::tags_size() const { return tags_.size(); }
void Event::clear_tags() { tags_.Clear(); }
const ::google::protobuf::Map< ::std::string, ::proio::proto::Tag>& Event::tags() const {
    // @@protoc_insertion_point(field_map:proio.proto.Event.tags)
    return tags_.GetMap();
}
::google::protobuf::Map< ::std::string, ::proio::proto::Tag>* Event::mutable_tags() {
    // @@protoc_insertion_point(field_mutable_map:proio.proto.Event.tags)
    return tags_.MutableMap();
}

// uint64 nEntries = 2;
void Event::clear_nentries() { nentries_ = GOOGLE_ULONGLONG(0); }
::google::protobuf::uint64 Event::nentries() const {
    // @@protoc_insertion_point(field_get:proio.proto.Event.nEntries)
    return nentries_;
}
void Event::set_nentries(::google::protobuf::uint64 value) {
    nentries_ = value;
    // @@protoc_insertion_point(field_set:proio.proto.Event.nEntries)
}

// map<uint64, .proio.proto.Entry> entries = 3;
int Event::entries_size() const { return entries_.size(); }
void Event::clear_entries() { entries_.Clear(); }
const ::google::protobuf::Map< ::google::protobuf::uint64, ::proio::proto::Entry>& Event::entries() const {
    // @@protoc_insertion_point(field_map:proio.proto.Event.entries)
    return entries_.GetMap();
}
::google::protobuf::Map< ::google::protobuf::uint64, ::proio::proto::Entry>* Event::mutable_entries() {
    // @@protoc_insertion_point(field_mutable_map:proio.proto.Event.entries)
    return entries_.MutableMap();
}

// uint64 nTypes = 4;
void Event::clear_ntypes() { ntypes_ = GOOGLE_ULONGLONG(0); }
::google::protobuf::uint64 Event::ntypes() const {
    // @@protoc_insertion_point(field_get:proio.proto.Event.nTypes)
    return ntypes_;
}
void Event::set_ntypes(::google::protobuf::uint64 value) {
    ntypes_ = value;
    // @@protoc_insertion_point(field_set:proio.proto.Event.nTypes)
}

// map<uint64, string> types = 5;
int Event::types_size() const { return types_.size(); }
void Event::clear_types() { types_.Clear(); }
const ::google::protobuf::Map< ::google::protobuf::uint64, ::std::string>& Event::types() const {
    // @@protoc_insertion_point(field_map:proio.proto.Event.types)
    return types_.GetMap();
}
::google::protobuf::Map< ::google::protobuf::uint64, ::std::string>* Event::mutable_types() {
    // @@protoc_insertion_point(field_mutable_map:proio.proto.Event.types)
    return types_.MutableMap();
}

// uint64 timestamp = 6;
void Event::clear_timestamp() { timestamp_ = GOOGLE_ULONGLONG(0); }
::google::protobuf::uint64 Event::timestamp() const {
    // @@protoc_insertion_point(field_get:proio.proto.Event.timestamp)
    return timestamp_;
}
void Event::set_timestamp(::google::protobuf::uint64 value) {
    timestamp_ = value;
    // @@protoc_insertion_point(field_set:proio.proto.Event.timestamp)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace proto
}  // namespace proio

// @@protoc_insertion_point(global_scope)

// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proio/model/proio.proto

#ifndef PROTOBUF_proio_2fmodel_2fproio_2eproto__INCLUDED
#define PROTOBUF_proio_2fmodel_2fproio_2eproto__INCLUDED

#include <string>

#include <google/protobuf/stubs/common.h>

#if GOOGLE_PROTOBUF_VERSION < 3004000
#error This file was generated by a newer version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please update
#error your headers.
#endif
#if 3004000 < GOOGLE_PROTOBUF_MIN_PROTOC_VERSION
#error This file was generated by an older version of protoc which is
#error incompatible with your Protocol Buffer headers.  Please
#error regenerate this file with a newer version of protoc.
#endif

#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/arena.h>
#include <google/protobuf/arenastring.h>
#include <google/protobuf/generated_message_table_driven.h>
#include <google/protobuf/generated_message_util.h>
#include <google/protobuf/metadata.h>
#include <google/protobuf/message.h>
#include <google/protobuf/repeated_field.h>  // IWYU pragma: export
#include <google/protobuf/extension_set.h>  // IWYU pragma: export
#include <google/protobuf/map.h>  // IWYU pragma: export
#include <google/protobuf/map_entry.h>
#include <google/protobuf/map_field_inl.h>
#include <google/protobuf/unknown_field_set.h>
// @@protoc_insertion_point(includes)
namespace proio {
namespace model {
class EventHeader;
class EventHeaderDefaultTypeInternal;
extern EventHeaderDefaultTypeInternal _EventHeader_default_instance_;
class EventHeader_CollectionHeader;
class EventHeader_CollectionHeaderDefaultTypeInternal;
extern EventHeader_CollectionHeaderDefaultTypeInternal _EventHeader_CollectionHeader_default_instance_;
class FloatParams;
class FloatParamsDefaultTypeInternal;
extern FloatParamsDefaultTypeInternal _FloatParams_default_instance_;
class IntParams;
class IntParamsDefaultTypeInternal;
extern IntParamsDefaultTypeInternal _IntParams_default_instance_;
class Params;
class ParamsDefaultTypeInternal;
extern ParamsDefaultTypeInternal _Params_default_instance_;
class Params_FloatsEntry;
class Params_FloatsEntryDefaultTypeInternal;
extern Params_FloatsEntryDefaultTypeInternal _Params_FloatsEntry_default_instance_;
class Params_IntsEntry;
class Params_IntsEntryDefaultTypeInternal;
extern Params_IntsEntryDefaultTypeInternal _Params_IntsEntry_default_instance_;
class Params_StringsEntry;
class Params_StringsEntryDefaultTypeInternal;
extern Params_StringsEntryDefaultTypeInternal _Params_StringsEntry_default_instance_;
class Reference;
class ReferenceDefaultTypeInternal;
extern ReferenceDefaultTypeInternal _Reference_default_instance_;
class StringParams;
class StringParamsDefaultTypeInternal;
extern StringParamsDefaultTypeInternal _StringParams_default_instance_;
}  // namespace model
}  // namespace proio

namespace proio {
namespace model {

namespace protobuf_proio_2fmodel_2fproio_2eproto {
// Internal implementation detail -- do not call these.
struct TableStruct {
  static const ::google::protobuf::internal::ParseTableField entries[];
  static const ::google::protobuf::internal::AuxillaryParseTableField aux[];
  static const ::google::protobuf::internal::ParseTable schema[];
  static const ::google::protobuf::uint32 offsets[];
  static const ::google::protobuf::internal::FieldMetadata field_metadata[];
  static const ::google::protobuf::internal::SerializationTable serialization_table[];
  static void InitDefaultsImpl();
};
void AddDescriptors();
void InitDefaults();
}  // namespace protobuf_proio_2fmodel_2fproio_2eproto

// ===================================================================

class EventHeader_CollectionHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proio.model.EventHeader.CollectionHeader) */ {
 public:
  EventHeader_CollectionHeader();
  virtual ~EventHeader_CollectionHeader();

  EventHeader_CollectionHeader(const EventHeader_CollectionHeader& from);

  inline EventHeader_CollectionHeader& operator=(const EventHeader_CollectionHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventHeader_CollectionHeader(EventHeader_CollectionHeader&& from) noexcept
    : EventHeader_CollectionHeader() {
    *this = ::std::move(from);
  }

  inline EventHeader_CollectionHeader& operator=(EventHeader_CollectionHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EventHeader_CollectionHeader& default_instance();

  static inline const EventHeader_CollectionHeader* internal_default_instance() {
    return reinterpret_cast<const EventHeader_CollectionHeader*>(
               &_EventHeader_CollectionHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    0;

  void Swap(EventHeader_CollectionHeader* other);
  friend void swap(EventHeader_CollectionHeader& a, EventHeader_CollectionHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventHeader_CollectionHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  EventHeader_CollectionHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EventHeader_CollectionHeader& from);
  void MergeFrom(const EventHeader_CollectionHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EventHeader_CollectionHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // string name = 1;
  void clear_name();
  static const int kNameFieldNumber = 1;
  const ::std::string& name() const;
  void set_name(const ::std::string& value);
  #if LANG_CXX11
  void set_name(::std::string&& value);
  #endif
  void set_name(const char* value);
  void set_name(const char* value, size_t size);
  ::std::string* mutable_name();
  ::std::string* release_name();
  void set_allocated_name(::std::string* name);

  // string type = 3;
  void clear_type();
  static const int kTypeFieldNumber = 3;
  const ::std::string& type() const;
  void set_type(const ::std::string& value);
  #if LANG_CXX11
  void set_type(::std::string&& value);
  #endif
  void set_type(const char* value);
  void set_type(const char* value, size_t size);
  ::std::string* mutable_type();
  ::std::string* release_type();
  void set_allocated_type(::std::string* type);

  // uint32 id = 2;
  void clear_id();
  static const int kIdFieldNumber = 2;
  ::google::protobuf::uint32 id() const;
  void set_id(::google::protobuf::uint32 value);

  // uint32 payloadSize = 4;
  void clear_payloadsize();
  static const int kPayloadSizeFieldNumber = 4;
  ::google::protobuf::uint32 payloadsize() const;
  void set_payloadsize(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proio.model.EventHeader.CollectionHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::internal::ArenaStringPtr name_;
  ::google::protobuf::internal::ArenaStringPtr type_;
  ::google::protobuf::uint32 id_;
  ::google::protobuf::uint32 payloadsize_;
  mutable int _cached_size_;
  friend struct protobuf_proio_2fmodel_2fproio_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class EventHeader : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proio.model.EventHeader) */ {
 public:
  EventHeader();
  virtual ~EventHeader();

  EventHeader(const EventHeader& from);

  inline EventHeader& operator=(const EventHeader& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  EventHeader(EventHeader&& from) noexcept
    : EventHeader() {
    *this = ::std::move(from);
  }

  inline EventHeader& operator=(EventHeader&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const EventHeader& default_instance();

  static inline const EventHeader* internal_default_instance() {
    return reinterpret_cast<const EventHeader*>(
               &_EventHeader_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    1;

  void Swap(EventHeader* other);
  friend void swap(EventHeader& a, EventHeader& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline EventHeader* New() const PROTOBUF_FINAL { return New(NULL); }

  EventHeader* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const EventHeader& from);
  void MergeFrom(const EventHeader& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(EventHeader* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  typedef EventHeader_CollectionHeader CollectionHeader;

  // accessors -------------------------------------------------------

  // repeated .proio.model.EventHeader.CollectionHeader payloadCollections = 7;
  int payloadcollections_size() const;
  void clear_payloadcollections();
  static const int kPayloadCollectionsFieldNumber = 7;
  const ::proio::model::EventHeader_CollectionHeader& payloadcollections(int index) const;
  ::proio::model::EventHeader_CollectionHeader* mutable_payloadcollections(int index);
  ::proio::model::EventHeader_CollectionHeader* add_payloadcollections();
  ::google::protobuf::RepeatedPtrField< ::proio::model::EventHeader_CollectionHeader >*
      mutable_payloadcollections();
  const ::google::protobuf::RepeatedPtrField< ::proio::model::EventHeader_CollectionHeader >&
      payloadcollections() const;

  // string detector = 5;
  void clear_detector();
  static const int kDetectorFieldNumber = 5;
  const ::std::string& detector() const;
  void set_detector(const ::std::string& value);
  #if LANG_CXX11
  void set_detector(::std::string&& value);
  #endif
  void set_detector(const char* value);
  void set_detector(const char* value, size_t size);
  ::std::string* mutable_detector();
  ::std::string* release_detector();
  void set_allocated_detector(::std::string* detector);

  // string description = 16;
  void clear_description();
  static const int kDescriptionFieldNumber = 16;
  const ::std::string& description() const;
  void set_description(const ::std::string& value);
  #if LANG_CXX11
  void set_description(::std::string&& value);
  #endif
  void set_description(const char* value);
  void set_description(const char* value, size_t size);
  ::std::string* mutable_description();
  ::std::string* release_description();
  void set_allocated_description(::std::string* description);

  // .proio.model.Params params = 6;
  bool has_params() const;
  void clear_params();
  static const int kParamsFieldNumber = 6;
  const ::proio::model::Params& params() const;
  ::proio::model::Params* mutable_params();
  ::proio::model::Params* release_params();
  void set_allocated_params(::proio::model::Params* params);

  // uint64 runNumber = 2;
  void clear_runnumber();
  static const int kRunNumberFieldNumber = 2;
  ::google::protobuf::uint64 runnumber() const;
  void set_runnumber(::google::protobuf::uint64 value);

  // uint64 eventNumber = 3;
  void clear_eventnumber();
  static const int kEventNumberFieldNumber = 3;
  ::google::protobuf::uint64 eventnumber() const;
  void set_eventnumber(::google::protobuf::uint64 value);

  // uint64 timeStamp = 4;
  void clear_timestamp();
  static const int kTimeStampFieldNumber = 4;
  ::google::protobuf::uint64 timestamp() const;
  void set_timestamp(::google::protobuf::uint64 value);

  // uint32 version = 1;
  void clear_version();
  static const int kVersionFieldNumber = 1;
  ::google::protobuf::uint32 version() const;
  void set_version(::google::protobuf::uint32 value);

  // uint32 nUniqueIDs = 8;
  void clear_nuniqueids();
  static const int kNUniqueIDsFieldNumber = 8;
  ::google::protobuf::uint32 nuniqueids() const;
  void set_nuniqueids(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proio.model.EventHeader)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::proio::model::EventHeader_CollectionHeader > payloadcollections_;
  ::google::protobuf::internal::ArenaStringPtr detector_;
  ::google::protobuf::internal::ArenaStringPtr description_;
  ::proio::model::Params* params_;
  ::google::protobuf::uint64 runnumber_;
  ::google::protobuf::uint64 eventnumber_;
  ::google::protobuf::uint64 timestamp_;
  ::google::protobuf::uint32 version_;
  ::google::protobuf::uint32 nuniqueids_;
  mutable int _cached_size_;
  friend struct protobuf_proio_2fmodel_2fproio_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class IntParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proio.model.IntParams) */ {
 public:
  IntParams();
  virtual ~IntParams();

  IntParams(const IntParams& from);

  inline IntParams& operator=(const IntParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  IntParams(IntParams&& from) noexcept
    : IntParams() {
    *this = ::std::move(from);
  }

  inline IntParams& operator=(IntParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const IntParams& default_instance();

  static inline const IntParams* internal_default_instance() {
    return reinterpret_cast<const IntParams*>(
               &_IntParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    2;

  void Swap(IntParams* other);
  friend void swap(IntParams& a, IntParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline IntParams* New() const PROTOBUF_FINAL { return New(NULL); }

  IntParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const IntParams& from);
  void MergeFrom(const IntParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(IntParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated int32 array = 1;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 1;
  ::google::protobuf::int32 array(int index) const;
  void set_array(int index, ::google::protobuf::int32 value);
  void add_array(::google::protobuf::int32 value);
  const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
      array() const;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
      mutable_array();

  // @@protoc_insertion_point(class_scope:proio.model.IntParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< ::google::protobuf::int32 > array_;
  mutable int _array_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_proio_2fmodel_2fproio_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class FloatParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proio.model.FloatParams) */ {
 public:
  FloatParams();
  virtual ~FloatParams();

  FloatParams(const FloatParams& from);

  inline FloatParams& operator=(const FloatParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  FloatParams(FloatParams&& from) noexcept
    : FloatParams() {
    *this = ::std::move(from);
  }

  inline FloatParams& operator=(FloatParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const FloatParams& default_instance();

  static inline const FloatParams* internal_default_instance() {
    return reinterpret_cast<const FloatParams*>(
               &_FloatParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    3;

  void Swap(FloatParams* other);
  friend void swap(FloatParams& a, FloatParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline FloatParams* New() const PROTOBUF_FINAL { return New(NULL); }

  FloatParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const FloatParams& from);
  void MergeFrom(const FloatParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(FloatParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated float array = 1;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 1;
  float array(int index) const;
  void set_array(int index, float value);
  void add_array(float value);
  const ::google::protobuf::RepeatedField< float >&
      array() const;
  ::google::protobuf::RepeatedField< float >*
      mutable_array();

  // @@protoc_insertion_point(class_scope:proio.model.FloatParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedField< float > array_;
  mutable int _array_cached_byte_size_;
  mutable int _cached_size_;
  friend struct protobuf_proio_2fmodel_2fproio_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class StringParams : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proio.model.StringParams) */ {
 public:
  StringParams();
  virtual ~StringParams();

  StringParams(const StringParams& from);

  inline StringParams& operator=(const StringParams& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  StringParams(StringParams&& from) noexcept
    : StringParams() {
    *this = ::std::move(from);
  }

  inline StringParams& operator=(StringParams&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const StringParams& default_instance();

  static inline const StringParams* internal_default_instance() {
    return reinterpret_cast<const StringParams*>(
               &_StringParams_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    4;

  void Swap(StringParams* other);
  friend void swap(StringParams& a, StringParams& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline StringParams* New() const PROTOBUF_FINAL { return New(NULL); }

  StringParams* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const StringParams& from);
  void MergeFrom(const StringParams& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(StringParams* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // repeated string array = 1;
  int array_size() const;
  void clear_array();
  static const int kArrayFieldNumber = 1;
  const ::std::string& array(int index) const;
  ::std::string* mutable_array(int index);
  void set_array(int index, const ::std::string& value);
  #if LANG_CXX11
  void set_array(int index, ::std::string&& value);
  #endif
  void set_array(int index, const char* value);
  void set_array(int index, const char* value, size_t size);
  ::std::string* add_array();
  void add_array(const ::std::string& value);
  #if LANG_CXX11
  void add_array(::std::string&& value);
  #endif
  void add_array(const char* value);
  void add_array(const char* value, size_t size);
  const ::google::protobuf::RepeatedPtrField< ::std::string>& array() const;
  ::google::protobuf::RepeatedPtrField< ::std::string>* mutable_array();

  // @@protoc_insertion_point(class_scope:proio.model.StringParams)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::RepeatedPtrField< ::std::string> array_;
  mutable int _cached_size_;
  friend struct protobuf_proio_2fmodel_2fproio_2eproto::TableStruct;
};
// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------


// -------------------------------------------------------------------

class Params : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proio.model.Params) */ {
 public:
  Params();
  virtual ~Params();

  Params(const Params& from);

  inline Params& operator=(const Params& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Params(Params&& from) noexcept
    : Params() {
    *this = ::std::move(from);
  }

  inline Params& operator=(Params&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Params& default_instance();

  static inline const Params* internal_default_instance() {
    return reinterpret_cast<const Params*>(
               &_Params_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    8;

  void Swap(Params* other);
  friend void swap(Params& a, Params& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Params* New() const PROTOBUF_FINAL { return New(NULL); }

  Params* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Params& from);
  void MergeFrom(const Params& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Params* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------


  // accessors -------------------------------------------------------

  // map<string, .proio.model.IntParams> ints = 1;
  int ints_size() const;
  void clear_ints();
  static const int kIntsFieldNumber = 1;
  const ::google::protobuf::Map< ::std::string, ::proio::model::IntParams >&
      ints() const;
  ::google::protobuf::Map< ::std::string, ::proio::model::IntParams >*
      mutable_ints();

  // map<string, .proio.model.FloatParams> floats = 2;
  int floats_size() const;
  void clear_floats();
  static const int kFloatsFieldNumber = 2;
  const ::google::protobuf::Map< ::std::string, ::proio::model::FloatParams >&
      floats() const;
  ::google::protobuf::Map< ::std::string, ::proio::model::FloatParams >*
      mutable_floats();

  // map<string, .proio.model.StringParams> strings = 3;
  int strings_size() const;
  void clear_strings();
  static const int kStringsFieldNumber = 3;
  const ::google::protobuf::Map< ::std::string, ::proio::model::StringParams >&
      strings() const;
  ::google::protobuf::Map< ::std::string, ::proio::model::StringParams >*
      mutable_strings();

  // @@protoc_insertion_point(class_scope:proio.model.Params)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  public:
  class Params_IntsEntry : public ::google::protobuf::internal::MapEntry<Params_IntsEntry, 
      ::std::string, ::proio::model::IntParams,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Params_IntsEntry, 
      ::std::string, ::proio::model::IntParams,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    Params_IntsEntry();
    Params_IntsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Params_IntsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Params_IntsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      Params_IntsEntry,
      ::std::string, ::proio::model::IntParams,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > ints_;
  private:
  public:
  class Params_FloatsEntry : public ::google::protobuf::internal::MapEntry<Params_FloatsEntry, 
      ::std::string, ::proio::model::FloatParams,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Params_FloatsEntry, 
      ::std::string, ::proio::model::FloatParams,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    Params_FloatsEntry();
    Params_FloatsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Params_FloatsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Params_FloatsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      Params_FloatsEntry,
      ::std::string, ::proio::model::FloatParams,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > floats_;
  private:
  public:
  class Params_StringsEntry : public ::google::protobuf::internal::MapEntry<Params_StringsEntry, 
      ::std::string, ::proio::model::StringParams,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > {
  public:
    typedef ::google::protobuf::internal::MapEntry<Params_StringsEntry, 
      ::std::string, ::proio::model::StringParams,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > SuperType;
    Params_StringsEntry();
    Params_StringsEntry(::google::protobuf::Arena* arena);
    void MergeFrom(const ::google::protobuf::Message& other) PROTOBUF_FINAL;
    void MergeFrom(const Params_StringsEntry& other);
    static const Message* internal_default_instance() { return reinterpret_cast<const Message*>(&_Params_StringsEntry_default_instance_); }
    ::google::protobuf::Metadata GetMetadata() const;
  };
  private:
  ::google::protobuf::internal::MapField<
      Params_StringsEntry,
      ::std::string, ::proio::model::StringParams,
      ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
      ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE,
      0 > strings_;
  private:
  mutable int _cached_size_;
  friend struct protobuf_proio_2fmodel_2fproio_2eproto::TableStruct;
};
// -------------------------------------------------------------------

class Reference : public ::google::protobuf::Message /* @@protoc_insertion_point(class_definition:proio.model.Reference) */ {
 public:
  Reference();
  virtual ~Reference();

  Reference(const Reference& from);

  inline Reference& operator=(const Reference& from) {
    CopyFrom(from);
    return *this;
  }
  #if LANG_CXX11
  Reference(Reference&& from) noexcept
    : Reference() {
    *this = ::std::move(from);
  }

  inline Reference& operator=(Reference&& from) noexcept {
    if (GetArenaNoVirtual() == from.GetArenaNoVirtual()) {
      if (this != &from) InternalSwap(&from);
    } else {
      CopyFrom(from);
    }
    return *this;
  }
  #endif
  static const ::google::protobuf::Descriptor* descriptor();
  static const Reference& default_instance();

  static inline const Reference* internal_default_instance() {
    return reinterpret_cast<const Reference*>(
               &_Reference_default_instance_);
  }
  static PROTOBUF_CONSTEXPR int const kIndexInFileMessages =
    9;

  void Swap(Reference* other);
  friend void swap(Reference& a, Reference& b) {
    a.Swap(&b);
  }

  // implements Message ----------------------------------------------

  inline Reference* New() const PROTOBUF_FINAL { return New(NULL); }

  Reference* New(::google::protobuf::Arena* arena) const PROTOBUF_FINAL;
  void CopyFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void MergeFrom(const ::google::protobuf::Message& from) PROTOBUF_FINAL;
  void CopyFrom(const Reference& from);
  void MergeFrom(const Reference& from);
  void Clear() PROTOBUF_FINAL;
  bool IsInitialized() const PROTOBUF_FINAL;

  size_t ByteSizeLong() const PROTOBUF_FINAL;
  bool MergePartialFromCodedStream(
      ::google::protobuf::io::CodedInputStream* input) PROTOBUF_FINAL;
  void SerializeWithCachedSizes(
      ::google::protobuf::io::CodedOutputStream* output) const PROTOBUF_FINAL;
  ::google::protobuf::uint8* InternalSerializeWithCachedSizesToArray(
      bool deterministic, ::google::protobuf::uint8* target) const PROTOBUF_FINAL;
  int GetCachedSize() const PROTOBUF_FINAL { return _cached_size_; }
  private:
  void SharedCtor();
  void SharedDtor();
  void SetCachedSize(int size) const PROTOBUF_FINAL;
  void InternalSwap(Reference* other);
  private:
  inline ::google::protobuf::Arena* GetArenaNoVirtual() const {
    return NULL;
  }
  inline void* MaybeArenaPtr() const {
    return NULL;
  }
  public:

  ::google::protobuf::Metadata GetMetadata() const PROTOBUF_FINAL;

  // nested types ----------------------------------------------------

  // accessors -------------------------------------------------------

  // uint32 collID = 1;
  void clear_collid();
  static const int kCollIDFieldNumber = 1;
  ::google::protobuf::uint32 collid() const;
  void set_collid(::google::protobuf::uint32 value);

  // uint32 entryID = 2;
  void clear_entryid();
  static const int kEntryIDFieldNumber = 2;
  ::google::protobuf::uint32 entryid() const;
  void set_entryid(::google::protobuf::uint32 value);

  // @@protoc_insertion_point(class_scope:proio.model.Reference)
 private:

  ::google::protobuf::internal::InternalMetadataWithArena _internal_metadata_;
  ::google::protobuf::uint32 collid_;
  ::google::protobuf::uint32 entryid_;
  mutable int _cached_size_;
  friend struct protobuf_proio_2fmodel_2fproio_2eproto::TableStruct;
};
// ===================================================================


// ===================================================================

#if !PROTOBUF_INLINE_NOT_IN_HEADERS
#ifdef __GNUC__
  #pragma GCC diagnostic push
  #pragma GCC diagnostic ignored "-Wstrict-aliasing"
#endif  // __GNUC__
// EventHeader_CollectionHeader

// string name = 1;
inline void EventHeader_CollectionHeader::clear_name() {
  name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EventHeader_CollectionHeader::name() const {
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.CollectionHeader.name)
  return name_.GetNoArena();
}
inline void EventHeader_CollectionHeader::set_name(const ::std::string& value) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proio.model.EventHeader.CollectionHeader.name)
}
#if LANG_CXX11
inline void EventHeader_CollectionHeader::set_name(::std::string&& value) {
  
  name_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proio.model.EventHeader.CollectionHeader.name)
}
#endif
inline void EventHeader_CollectionHeader::set_name(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proio.model.EventHeader.CollectionHeader.name)
}
inline void EventHeader_CollectionHeader::set_name(const char* value, size_t size) {
  
  name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proio.model.EventHeader.CollectionHeader.name)
}
inline ::std::string* EventHeader_CollectionHeader::mutable_name() {
  
  // @@protoc_insertion_point(field_mutable:proio.model.EventHeader.CollectionHeader.name)
  return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EventHeader_CollectionHeader::release_name() {
  // @@protoc_insertion_point(field_release:proio.model.EventHeader.CollectionHeader.name)
  
  return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EventHeader_CollectionHeader::set_allocated_name(::std::string* name) {
  if (name != NULL) {
    
  } else {
    
  }
  name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
  // @@protoc_insertion_point(field_set_allocated:proio.model.EventHeader.CollectionHeader.name)
}

// uint32 id = 2;
inline void EventHeader_CollectionHeader::clear_id() {
  id_ = 0u;
}
inline ::google::protobuf::uint32 EventHeader_CollectionHeader::id() const {
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.CollectionHeader.id)
  return id_;
}
inline void EventHeader_CollectionHeader::set_id(::google::protobuf::uint32 value) {
  
  id_ = value;
  // @@protoc_insertion_point(field_set:proio.model.EventHeader.CollectionHeader.id)
}

// string type = 3;
inline void EventHeader_CollectionHeader::clear_type() {
  type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EventHeader_CollectionHeader::type() const {
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.CollectionHeader.type)
  return type_.GetNoArena();
}
inline void EventHeader_CollectionHeader::set_type(const ::std::string& value) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proio.model.EventHeader.CollectionHeader.type)
}
#if LANG_CXX11
inline void EventHeader_CollectionHeader::set_type(::std::string&& value) {
  
  type_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proio.model.EventHeader.CollectionHeader.type)
}
#endif
inline void EventHeader_CollectionHeader::set_type(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proio.model.EventHeader.CollectionHeader.type)
}
inline void EventHeader_CollectionHeader::set_type(const char* value, size_t size) {
  
  type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proio.model.EventHeader.CollectionHeader.type)
}
inline ::std::string* EventHeader_CollectionHeader::mutable_type() {
  
  // @@protoc_insertion_point(field_mutable:proio.model.EventHeader.CollectionHeader.type)
  return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EventHeader_CollectionHeader::release_type() {
  // @@protoc_insertion_point(field_release:proio.model.EventHeader.CollectionHeader.type)
  
  return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EventHeader_CollectionHeader::set_allocated_type(::std::string* type) {
  if (type != NULL) {
    
  } else {
    
  }
  type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
  // @@protoc_insertion_point(field_set_allocated:proio.model.EventHeader.CollectionHeader.type)
}

// uint32 payloadSize = 4;
inline void EventHeader_CollectionHeader::clear_payloadsize() {
  payloadsize_ = 0u;
}
inline ::google::protobuf::uint32 EventHeader_CollectionHeader::payloadsize() const {
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.CollectionHeader.payloadSize)
  return payloadsize_;
}
inline void EventHeader_CollectionHeader::set_payloadsize(::google::protobuf::uint32 value) {
  
  payloadsize_ = value;
  // @@protoc_insertion_point(field_set:proio.model.EventHeader.CollectionHeader.payloadSize)
}

// -------------------------------------------------------------------

// EventHeader

// uint32 version = 1;
inline void EventHeader::clear_version() {
  version_ = 0u;
}
inline ::google::protobuf::uint32 EventHeader::version() const {
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.version)
  return version_;
}
inline void EventHeader::set_version(::google::protobuf::uint32 value) {
  
  version_ = value;
  // @@protoc_insertion_point(field_set:proio.model.EventHeader.version)
}

// uint64 runNumber = 2;
inline void EventHeader::clear_runnumber() {
  runnumber_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EventHeader::runnumber() const {
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.runNumber)
  return runnumber_;
}
inline void EventHeader::set_runnumber(::google::protobuf::uint64 value) {
  
  runnumber_ = value;
  // @@protoc_insertion_point(field_set:proio.model.EventHeader.runNumber)
}

// uint64 eventNumber = 3;
inline void EventHeader::clear_eventnumber() {
  eventnumber_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EventHeader::eventnumber() const {
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.eventNumber)
  return eventnumber_;
}
inline void EventHeader::set_eventnumber(::google::protobuf::uint64 value) {
  
  eventnumber_ = value;
  // @@protoc_insertion_point(field_set:proio.model.EventHeader.eventNumber)
}

// uint64 timeStamp = 4;
inline void EventHeader::clear_timestamp() {
  timestamp_ = GOOGLE_ULONGLONG(0);
}
inline ::google::protobuf::uint64 EventHeader::timestamp() const {
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.timeStamp)
  return timestamp_;
}
inline void EventHeader::set_timestamp(::google::protobuf::uint64 value) {
  
  timestamp_ = value;
  // @@protoc_insertion_point(field_set:proio.model.EventHeader.timeStamp)
}

// string detector = 5;
inline void EventHeader::clear_detector() {
  detector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EventHeader::detector() const {
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.detector)
  return detector_.GetNoArena();
}
inline void EventHeader::set_detector(const ::std::string& value) {
  
  detector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proio.model.EventHeader.detector)
}
#if LANG_CXX11
inline void EventHeader::set_detector(::std::string&& value) {
  
  detector_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proio.model.EventHeader.detector)
}
#endif
inline void EventHeader::set_detector(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  detector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proio.model.EventHeader.detector)
}
inline void EventHeader::set_detector(const char* value, size_t size) {
  
  detector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proio.model.EventHeader.detector)
}
inline ::std::string* EventHeader::mutable_detector() {
  
  // @@protoc_insertion_point(field_mutable:proio.model.EventHeader.detector)
  return detector_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EventHeader::release_detector() {
  // @@protoc_insertion_point(field_release:proio.model.EventHeader.detector)
  
  return detector_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EventHeader::set_allocated_detector(::std::string* detector) {
  if (detector != NULL) {
    
  } else {
    
  }
  detector_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detector);
  // @@protoc_insertion_point(field_set_allocated:proio.model.EventHeader.detector)
}

// .proio.model.Params params = 6;
inline bool EventHeader::has_params() const {
  return this != internal_default_instance() && params_ != NULL;
}
inline void EventHeader::clear_params() {
  if (GetArenaNoVirtual() == NULL && params_ != NULL) delete params_;
  params_ = NULL;
}
inline const ::proio::model::Params& EventHeader::params() const {
  const ::proio::model::Params* p = params_;
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.params)
  return p != NULL ? *p : *reinterpret_cast<const ::proio::model::Params*>(
      &::proio::model::_Params_default_instance_);
}
inline ::proio::model::Params* EventHeader::mutable_params() {
  
  if (params_ == NULL) {
    params_ = new ::proio::model::Params;
  }
  // @@protoc_insertion_point(field_mutable:proio.model.EventHeader.params)
  return params_;
}
inline ::proio::model::Params* EventHeader::release_params() {
  // @@protoc_insertion_point(field_release:proio.model.EventHeader.params)
  
  ::proio::model::Params* temp = params_;
  params_ = NULL;
  return temp;
}
inline void EventHeader::set_allocated_params(::proio::model::Params* params) {
  delete params_;
  params_ = params;
  if (params) {
    
  } else {
    
  }
  // @@protoc_insertion_point(field_set_allocated:proio.model.EventHeader.params)
}

// repeated .proio.model.EventHeader.CollectionHeader payloadCollections = 7;
inline int EventHeader::payloadcollections_size() const {
  return payloadcollections_.size();
}
inline void EventHeader::clear_payloadcollections() {
  payloadcollections_.Clear();
}
inline const ::proio::model::EventHeader_CollectionHeader& EventHeader::payloadcollections(int index) const {
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.payloadCollections)
  return payloadcollections_.Get(index);
}
inline ::proio::model::EventHeader_CollectionHeader* EventHeader::mutable_payloadcollections(int index) {
  // @@protoc_insertion_point(field_mutable:proio.model.EventHeader.payloadCollections)
  return payloadcollections_.Mutable(index);
}
inline ::proio::model::EventHeader_CollectionHeader* EventHeader::add_payloadcollections() {
  // @@protoc_insertion_point(field_add:proio.model.EventHeader.payloadCollections)
  return payloadcollections_.Add();
}
inline ::google::protobuf::RepeatedPtrField< ::proio::model::EventHeader_CollectionHeader >*
EventHeader::mutable_payloadcollections() {
  // @@protoc_insertion_point(field_mutable_list:proio.model.EventHeader.payloadCollections)
  return &payloadcollections_;
}
inline const ::google::protobuf::RepeatedPtrField< ::proio::model::EventHeader_CollectionHeader >&
EventHeader::payloadcollections() const {
  // @@protoc_insertion_point(field_list:proio.model.EventHeader.payloadCollections)
  return payloadcollections_;
}

// uint32 nUniqueIDs = 8;
inline void EventHeader::clear_nuniqueids() {
  nuniqueids_ = 0u;
}
inline ::google::protobuf::uint32 EventHeader::nuniqueids() const {
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.nUniqueIDs)
  return nuniqueids_;
}
inline void EventHeader::set_nuniqueids(::google::protobuf::uint32 value) {
  
  nuniqueids_ = value;
  // @@protoc_insertion_point(field_set:proio.model.EventHeader.nUniqueIDs)
}

// string description = 16;
inline void EventHeader::clear_description() {
  description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline const ::std::string& EventHeader::description() const {
  // @@protoc_insertion_point(field_get:proio.model.EventHeader.description)
  return description_.GetNoArena();
}
inline void EventHeader::set_description(const ::std::string& value) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
  // @@protoc_insertion_point(field_set:proio.model.EventHeader.description)
}
#if LANG_CXX11
inline void EventHeader::set_description(::std::string&& value) {
  
  description_.SetNoArena(
    &::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
  // @@protoc_insertion_point(field_set_rvalue:proio.model.EventHeader.description)
}
#endif
inline void EventHeader::set_description(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
  // @@protoc_insertion_point(field_set_char:proio.model.EventHeader.description)
}
inline void EventHeader::set_description(const char* value, size_t size) {
  
  description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
      ::std::string(reinterpret_cast<const char*>(value), size));
  // @@protoc_insertion_point(field_set_pointer:proio.model.EventHeader.description)
}
inline ::std::string* EventHeader::mutable_description() {
  
  // @@protoc_insertion_point(field_mutable:proio.model.EventHeader.description)
  return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline ::std::string* EventHeader::release_description() {
  // @@protoc_insertion_point(field_release:proio.model.EventHeader.description)
  
  return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
inline void EventHeader::set_allocated_description(::std::string* description) {
  if (description != NULL) {
    
  } else {
    
  }
  description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), description);
  // @@protoc_insertion_point(field_set_allocated:proio.model.EventHeader.description)
}

// -------------------------------------------------------------------

// IntParams

// repeated int32 array = 1;
inline int IntParams::array_size() const {
  return array_.size();
}
inline void IntParams::clear_array() {
  array_.Clear();
}
inline ::google::protobuf::int32 IntParams::array(int index) const {
  // @@protoc_insertion_point(field_get:proio.model.IntParams.array)
  return array_.Get(index);
}
inline void IntParams::set_array(int index, ::google::protobuf::int32 value) {
  array_.Set(index, value);
  // @@protoc_insertion_point(field_set:proio.model.IntParams.array)
}
inline void IntParams::add_array(::google::protobuf::int32 value) {
  array_.Add(value);
  // @@protoc_insertion_point(field_add:proio.model.IntParams.array)
}
inline const ::google::protobuf::RepeatedField< ::google::protobuf::int32 >&
IntParams::array() const {
  // @@protoc_insertion_point(field_list:proio.model.IntParams.array)
  return array_;
}
inline ::google::protobuf::RepeatedField< ::google::protobuf::int32 >*
IntParams::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:proio.model.IntParams.array)
  return &array_;
}

// -------------------------------------------------------------------

// FloatParams

// repeated float array = 1;
inline int FloatParams::array_size() const {
  return array_.size();
}
inline void FloatParams::clear_array() {
  array_.Clear();
}
inline float FloatParams::array(int index) const {
  // @@protoc_insertion_point(field_get:proio.model.FloatParams.array)
  return array_.Get(index);
}
inline void FloatParams::set_array(int index, float value) {
  array_.Set(index, value);
  // @@protoc_insertion_point(field_set:proio.model.FloatParams.array)
}
inline void FloatParams::add_array(float value) {
  array_.Add(value);
  // @@protoc_insertion_point(field_add:proio.model.FloatParams.array)
}
inline const ::google::protobuf::RepeatedField< float >&
FloatParams::array() const {
  // @@protoc_insertion_point(field_list:proio.model.FloatParams.array)
  return array_;
}
inline ::google::protobuf::RepeatedField< float >*
FloatParams::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:proio.model.FloatParams.array)
  return &array_;
}

// -------------------------------------------------------------------

// StringParams

// repeated string array = 1;
inline int StringParams::array_size() const {
  return array_.size();
}
inline void StringParams::clear_array() {
  array_.Clear();
}
inline const ::std::string& StringParams::array(int index) const {
  // @@protoc_insertion_point(field_get:proio.model.StringParams.array)
  return array_.Get(index);
}
inline ::std::string* StringParams::mutable_array(int index) {
  // @@protoc_insertion_point(field_mutable:proio.model.StringParams.array)
  return array_.Mutable(index);
}
inline void StringParams::set_array(int index, const ::std::string& value) {
  // @@protoc_insertion_point(field_set:proio.model.StringParams.array)
  array_.Mutable(index)->assign(value);
}
#if LANG_CXX11
inline void StringParams::set_array(int index, ::std::string&& value) {
  // @@protoc_insertion_point(field_set:proio.model.StringParams.array)
  array_.Mutable(index)->assign(std::move(value));
}
#endif
inline void StringParams::set_array(int index, const char* value) {
  GOOGLE_DCHECK(value != NULL);
  array_.Mutable(index)->assign(value);
  // @@protoc_insertion_point(field_set_char:proio.model.StringParams.array)
}
inline void StringParams::set_array(int index, const char* value, size_t size) {
  array_.Mutable(index)->assign(
    reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_set_pointer:proio.model.StringParams.array)
}
inline ::std::string* StringParams::add_array() {
  // @@protoc_insertion_point(field_add_mutable:proio.model.StringParams.array)
  return array_.Add();
}
inline void StringParams::add_array(const ::std::string& value) {
  array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add:proio.model.StringParams.array)
}
#if LANG_CXX11
inline void StringParams::add_array(::std::string&& value) {
  array_.Add(std::move(value));
  // @@protoc_insertion_point(field_add:proio.model.StringParams.array)
}
#endif
inline void StringParams::add_array(const char* value) {
  GOOGLE_DCHECK(value != NULL);
  array_.Add()->assign(value);
  // @@protoc_insertion_point(field_add_char:proio.model.StringParams.array)
}
inline void StringParams::add_array(const char* value, size_t size) {
  array_.Add()->assign(reinterpret_cast<const char*>(value), size);
  // @@protoc_insertion_point(field_add_pointer:proio.model.StringParams.array)
}
inline const ::google::protobuf::RepeatedPtrField< ::std::string>&
StringParams::array() const {
  // @@protoc_insertion_point(field_list:proio.model.StringParams.array)
  return array_;
}
inline ::google::protobuf::RepeatedPtrField< ::std::string>*
StringParams::mutable_array() {
  // @@protoc_insertion_point(field_mutable_list:proio.model.StringParams.array)
  return &array_;
}

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// Params

// map<string, .proio.model.IntParams> ints = 1;
inline int Params::ints_size() const {
  return ints_.size();
}
inline void Params::clear_ints() {
  ints_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::proio::model::IntParams >&
Params::ints() const {
  // @@protoc_insertion_point(field_map:proio.model.Params.ints)
  return ints_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::proio::model::IntParams >*
Params::mutable_ints() {
  // @@protoc_insertion_point(field_mutable_map:proio.model.Params.ints)
  return ints_.MutableMap();
}

// map<string, .proio.model.FloatParams> floats = 2;
inline int Params::floats_size() const {
  return floats_.size();
}
inline void Params::clear_floats() {
  floats_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::proio::model::FloatParams >&
Params::floats() const {
  // @@protoc_insertion_point(field_map:proio.model.Params.floats)
  return floats_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::proio::model::FloatParams >*
Params::mutable_floats() {
  // @@protoc_insertion_point(field_mutable_map:proio.model.Params.floats)
  return floats_.MutableMap();
}

// map<string, .proio.model.StringParams> strings = 3;
inline int Params::strings_size() const {
  return strings_.size();
}
inline void Params::clear_strings() {
  strings_.Clear();
}
inline const ::google::protobuf::Map< ::std::string, ::proio::model::StringParams >&
Params::strings() const {
  // @@protoc_insertion_point(field_map:proio.model.Params.strings)
  return strings_.GetMap();
}
inline ::google::protobuf::Map< ::std::string, ::proio::model::StringParams >*
Params::mutable_strings() {
  // @@protoc_insertion_point(field_mutable_map:proio.model.Params.strings)
  return strings_.MutableMap();
}

// -------------------------------------------------------------------

// Reference

// uint32 collID = 1;
inline void Reference::clear_collid() {
  collid_ = 0u;
}
inline ::google::protobuf::uint32 Reference::collid() const {
  // @@protoc_insertion_point(field_get:proio.model.Reference.collID)
  return collid_;
}
inline void Reference::set_collid(::google::protobuf::uint32 value) {
  
  collid_ = value;
  // @@protoc_insertion_point(field_set:proio.model.Reference.collID)
}

// uint32 entryID = 2;
inline void Reference::clear_entryid() {
  entryid_ = 0u;
}
inline ::google::protobuf::uint32 Reference::entryid() const {
  // @@protoc_insertion_point(field_get:proio.model.Reference.entryID)
  return entryid_;
}
inline void Reference::set_entryid(::google::protobuf::uint32 value) {
  
  entryid_ = value;
  // @@protoc_insertion_point(field_set:proio.model.Reference.entryID)
}

#ifdef __GNUC__
  #pragma GCC diagnostic pop
#endif  // __GNUC__
#endif  // !PROTOBUF_INLINE_NOT_IN_HEADERS
// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------

// -------------------------------------------------------------------


// @@protoc_insertion_point(namespace_scope)


}  // namespace model
}  // namespace proio

// @@protoc_insertion_point(global_scope)

#endif  // PROTOBUF_proio_2fmodel_2fproio_2eproto__INCLUDED

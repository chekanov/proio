// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: proio/model/proio.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "proio/model/proio.pb.h"

#include <algorithm>

#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace proio {
namespace model {
class EventHeader_CollectionHeaderDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<EventHeader_CollectionHeader> _instance;
} _EventHeader_CollectionHeader_default_instance_;
class EventHeaderDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<EventHeader> _instance;
} _EventHeader_default_instance_;
class IntParamsDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<IntParams> _instance;
} _IntParams_default_instance_;
class FloatParamsDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<FloatParams> _instance;
} _FloatParams_default_instance_;
class StringParamsDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<StringParams> _instance;
} _StringParams_default_instance_;
class Params_IntsEntryDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Params::Params_IntsEntry> _instance;
} _Params_IntsEntry_default_instance_;
class Params_FloatsEntryDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Params::Params_FloatsEntry> _instance;
} _Params_FloatsEntry_default_instance_;
class Params_StringsEntryDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Params::Params_StringsEntry> _instance;
} _Params_StringsEntry_default_instance_;
class ParamsDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Params> _instance;
} _Params_default_instance_;
class ReferenceDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Reference> _instance;
} _Reference_default_instance_;

namespace protobuf_proio_2fmodel_2fproio_2eproto {

namespace {

::google::protobuf::Metadata file_level_metadata[10];

}  // namespace

PROTOBUF_CONSTEXPR_VAR::google::protobuf::internal::ParseTableField const
    TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR::google::protobuf::internal::AuxillaryParseTableField const
    TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false}, {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false}, {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false}, {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false}, {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false}, {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader_CollectionHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader_CollectionHeader, name_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader_CollectionHeader, id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader_CollectionHeader, type_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader_CollectionHeader, payloadsize_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader, version_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader, runnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader, eventnumber_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader, timestamp_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader, detector_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader, params_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader, payloadcollections_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader, nuniqueids_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(EventHeader, description_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(IntParams, array_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FloatParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(FloatParams, array_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringParams, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(StringParams, array_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Params, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Params, ints_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Params, floats_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Params, strings_),
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reference, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reference, collid_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Reference, entryid_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    {0, -1, sizeof(EventHeader_CollectionHeader)},
    {9, -1, sizeof(EventHeader)},
    {23, -1, sizeof(IntParams)},
    {29, -1, sizeof(FloatParams)},
    {35, -1, sizeof(StringParams)},
    {41, -1, sizeof(Params)},
    {49, -1, sizeof(Reference)},
};

static ::google::protobuf::Message const* const file_default_instances[] = {
    reinterpret_cast<const ::google::protobuf::Message*>(&_EventHeader_CollectionHeader_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_EventHeader_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_IntParams_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_FloatParams_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_StringParams_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_Params_IntsEntry_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_Params_FloatsEntry_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_Params_StringsEntry_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_Params_default_instance_),
    reinterpret_cast<const ::google::protobuf::Message*>(&_Reference_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
    AddDescriptors();
    ::google::protobuf::MessageFactory* factory = NULL;
    AssignDescriptors("proio/model/proio.proto", schemas, file_default_instances, TableStruct::offsets,
                      factory, file_level_metadata, NULL, NULL);
    file_level_metadata[5].reflection = Params::Params_IntsEntry::CreateReflection(
        file_level_metadata[5].descriptor, _Params_IntsEntry_default_instance_._instance.get_mutable());
    file_level_metadata[6].reflection = Params::Params_FloatsEntry::CreateReflection(
        file_level_metadata[6].descriptor, _Params_FloatsEntry_default_instance_._instance.get_mutable());
    file_level_metadata[7].reflection = Params::Params_StringsEntry::CreateReflection(
        file_level_metadata[7].descriptor, _Params_StringsEntry_default_instance_._instance.get_mutable());
}

void protobuf_AssignDescriptorsOnce() {
    static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
    ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
    protobuf_AssignDescriptorsOnce();
    ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 10);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
    GOOGLE_PROTOBUF_VERIFY_VERSION;

    ::google::protobuf::internal::InitProtobufDefaults();
    _EventHeader_CollectionHeader_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_EventHeader_CollectionHeader_default_instance_);
    _EventHeader_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_EventHeader_default_instance_);
    _IntParams_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_IntParams_default_instance_);
    _FloatParams_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_FloatParams_default_instance_);
    _StringParams_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_StringParams_default_instance_);
    _Params_IntsEntry_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Params_IntsEntry_default_instance_);
    _Params_FloatsEntry_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Params_FloatsEntry_default_instance_);
    _Params_StringsEntry_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Params_StringsEntry_default_instance_);
    _Params_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Params_default_instance_);
    _Reference_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Reference_default_instance_);
    _EventHeader_default_instance_._instance.get_mutable()->params_ =
        const_cast< ::proio::model::Params*>(::proio::model::Params::internal_default_instance());
    _Params_IntsEntry_default_instance_._instance.get_mutable()->set_default_instance(
        _Params_IntsEntry_default_instance_._instance.get_mutable());
    _Params_IntsEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
    _Params_FloatsEntry_default_instance_._instance.get_mutable()->set_default_instance(
        _Params_FloatsEntry_default_instance_._instance.get_mutable());
    _Params_FloatsEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
    _Params_StringsEntry_default_instance_._instance.get_mutable()->set_default_instance(
        _Params_StringsEntry_default_instance_._instance.get_mutable());
    _Params_StringsEntry_default_instance_._instance.get_mutable()->InitAsDefaultInstance();
}

void InitDefaults() {
    static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
    ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
    InitDefaults();
    static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        "\n\027proio/model/proio.proto\022\013proio.model\"\321"
        "\002\n\013EventHeader\022\017\n\007version\030\001 \001(\r\022\021\n\trunNu"
        "mber\030\002 \001(\004\022\023\n\013eventNumber\030\003 \001(\004\022\021\n\ttimeS"
        "tamp\030\004 \001(\004\022\020\n\010detector\030\005 \001(\t\022#\n\006params\030\006"
        " \001(\0132\023.proio.model.Params\022E\n\022payloadColl"
        "ections\030\007 \003(\0132).proio.model.EventHeader."
        "CollectionHeader\022\022\n\nnUniqueIDs\030\010 \001(\r\022\023\n\013"
        "description\030\020 \001(\t\032O\n\020CollectionHeader\022\014\n"
        "\004name\030\001 \001(\t\022\n\n\002id\030\002 \001(\r\022\014\n\004type\030\003 \001(\t\022\023\n"
        "\013payloadSize\030\004 \001(\r\"\032\n\tIntParams\022\r\n\005array"
        "\030\001 \003(\005\"\034\n\013FloatParams\022\r\n\005array\030\001 \003(\002\"\035\n\014"
        "StringParams\022\r\n\005array\030\001 \003(\t\"\362\002\n\006Params\022+"
        "\n\004ints\030\001 \003(\0132\035.proio.model.Params.IntsEn"
        "try\022/\n\006floats\030\002 \003(\0132\037.proio.model.Params"
        ".FloatsEntry\0221\n\007strings\030\003 \003(\0132 .proio.mo"
        "del.Params.StringsEntry\032C\n\tIntsEntry\022\013\n\003"
        "key\030\001 \001(\t\022%\n\005value\030\002 \001(\0132\026.proio.model.I"
        "ntParams:\0028\001\032G\n\013FloatsEntry\022\013\n\003key\030\001 \001(\t"
        "\022\'\n\005value\030\002 \001(\0132\030.proio.model.FloatParam"
        "s:\0028\001\032I\n\014StringsEntry\022\013\n\003key\030\001 \001(\t\022(\n\005va"
        "lue\030\002 \001(\0132\031.proio.model.StringParams:\0028\001"
        "\",\n\tReference\022\016\n\006collID\030\001 \001(\r\022\017\n\007entryID"
        "\030\002 \001(\rB=\n\005proioB\005ModelZ-github.com/decib"
        "elcooper/proio/go-proio/modelb\006proto3"};
    ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor, 957);
    ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("proio/model/proio.proto",
                                                                      &protobuf_RegisterTypes);
}
}  // anonymous namespace

void AddDescriptors() {
    static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
    ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
    StaticDescriptorInitializer() { AddDescriptors(); }
} static_descriptor_initializer;

}  // namespace protobuf_proio_2fmodel_2fproio_2eproto

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventHeader_CollectionHeader::kNameFieldNumber;
const int EventHeader_CollectionHeader::kIdFieldNumber;
const int EventHeader_CollectionHeader::kTypeFieldNumber;
const int EventHeader_CollectionHeader::kPayloadSizeFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventHeader_CollectionHeader::EventHeader_CollectionHeader()
    : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.model.EventHeader.CollectionHeader)
}
EventHeader_CollectionHeader::EventHeader_CollectionHeader(const EventHeader_CollectionHeader& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL), _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (from.name().size() > 0) {
        name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (from.type().size() > 0) {
        type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    ::memcpy(&id_, &from.id_,
             static_cast<size_t>(reinterpret_cast<char*>(&payloadsize_) - reinterpret_cast<char*>(&id_)) +
                 sizeof(payloadsize_));
    // @@protoc_insertion_point(copy_constructor:proio.model.EventHeader.CollectionHeader)
}

void EventHeader_CollectionHeader::SharedCtor() {
    name_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    type_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(&id_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&payloadsize_) - reinterpret_cast<char*>(&id_)) +
                 sizeof(payloadsize_));
    _cached_size_ = 0;
}

EventHeader_CollectionHeader::~EventHeader_CollectionHeader() {
    // @@protoc_insertion_point(destructor:proio.model.EventHeader.CollectionHeader)
    SharedDtor();
}

void EventHeader_CollectionHeader::SharedDtor() {
    name_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    type_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}

void EventHeader_CollectionHeader::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventHeader_CollectionHeader::descriptor() {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventHeader_CollectionHeader& EventHeader_CollectionHeader::default_instance() {
    protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    return *internal_default_instance();
}

EventHeader_CollectionHeader* EventHeader_CollectionHeader::New(::google::protobuf::Arena* arena) const {
    EventHeader_CollectionHeader* n = new EventHeader_CollectionHeader;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void EventHeader_CollectionHeader::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.model.EventHeader.CollectionHeader)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(&id_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&payloadsize_) - reinterpret_cast<char*>(&id_)) +
                 sizeof(payloadsize_));
    _internal_metadata_.Clear();
}

bool EventHeader_CollectionHeader::MergePartialFromCodedStream(
    ::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.model.EventHeader.CollectionHeader)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // string name = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(input,
                                                                                 this->mutable_name()));
                    DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                        this->name().data(), static_cast<int>(this->name().length()),
                        ::google::protobuf::internal::WireFormatLite::PARSE,
                        "proio.model.EventHeader.CollectionHeader.name"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint32 id = 2;
            case 2: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(input, &id_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // string type = 3;
            case 3: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(input,
                                                                                 this->mutable_type()));
                    DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                        this->type().data(), static_cast<int>(this->type().length()),
                        ::google::protobuf::internal::WireFormatLite::PARSE,
                        "proio.model.EventHeader.CollectionHeader.type"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint32 payloadSize = 4;
            case 4: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(input, &payloadsize_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.model.EventHeader.CollectionHeader)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.model.EventHeader.CollectionHeader)
    return false;
#undef DO_
}

void EventHeader_CollectionHeader::SerializeWithCachedSizes(
    ::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.model.EventHeader.CollectionHeader)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // string name = 1;
    if (this->name().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "proio.model.EventHeader.CollectionHeader.name");
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(1, this->name(), output);
    }

    // uint32 id = 2;
    if (this->id() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->id(), output);
    }

    // string type = 3;
    if (this->type().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "proio.model.EventHeader.CollectionHeader.type");
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(3, this->type(), output);
    }

    // uint32 payloadSize = 4;
    if (this->payloadsize() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(4, this->payloadsize(), output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.model.EventHeader.CollectionHeader)
}

::google::protobuf::uint8* EventHeader_CollectionHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.model.EventHeader.CollectionHeader)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // string name = 1;
    if (this->name().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->name().data(), static_cast<int>(this->name().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "proio.model.EventHeader.CollectionHeader.name");
        target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(1, this->name(), target);
    }

    // uint32 id = 2;
    if (this->id() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->id(), target);
    }

    // string type = 3;
    if (this->type().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->type().data(), static_cast<int>(this->type().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE,
            "proio.model.EventHeader.CollectionHeader.type");
        target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(3, this->type(), target);
    }

    // uint32 payloadSize = 4;
    if (this->payloadsize() != 0) {
        target =
            ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(4, this->payloadsize(), target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.model.EventHeader.CollectionHeader)
    return target;
}

size_t EventHeader_CollectionHeader::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.model.EventHeader.CollectionHeader)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // string name = 1;
    if (this->name().size() > 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->name());
    }

    // string type = 3;
    if (this->type().size() > 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->type());
    }

    // uint32 id = 2;
    if (this->id() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(this->id());
    }

    // uint32 payloadSize = 4;
    if (this->payloadsize() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(this->payloadsize());
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void EventHeader_CollectionHeader::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.model.EventHeader.CollectionHeader)
    GOOGLE_DCHECK_NE(&from, this);
    const EventHeader_CollectionHeader* source =
        ::google::protobuf::internal::DynamicCastToGenerated<const EventHeader_CollectionHeader>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.model.EventHeader.CollectionHeader)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.model.EventHeader.CollectionHeader)
        MergeFrom(*source);
    }
}

void EventHeader_CollectionHeader::MergeFrom(const EventHeader_CollectionHeader& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.model.EventHeader.CollectionHeader)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    if (from.name().size() > 0) {
        name_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.name_);
    }
    if (from.type().size() > 0) {
        type_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), from.type_);
    }
    if (from.id() != 0) {
        set_id(from.id());
    }
    if (from.payloadsize() != 0) {
        set_payloadsize(from.payloadsize());
    }
}

void EventHeader_CollectionHeader::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.model.EventHeader.CollectionHeader)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void EventHeader_CollectionHeader::CopyFrom(const EventHeader_CollectionHeader& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.model.EventHeader.CollectionHeader)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool EventHeader_CollectionHeader::IsInitialized() const { return true; }

void EventHeader_CollectionHeader::Swap(EventHeader_CollectionHeader* other) {
    if (other == this) return;
    InternalSwap(other);
}
void EventHeader_CollectionHeader::InternalSwap(EventHeader_CollectionHeader* other) {
    using std::swap;
    name_.Swap(&other->name_);
    type_.Swap(&other->type_);
    swap(id_, other->id_);
    swap(payloadsize_, other->payloadsize_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventHeader_CollectionHeader::GetMetadata() const {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EventHeader_CollectionHeader

// string name = 1;
void EventHeader_CollectionHeader::clear_name() {
    name_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EventHeader_CollectionHeader::name() const {
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.CollectionHeader.name)
    return name_.GetNoArena();
}
void EventHeader_CollectionHeader::set_name(const ::std::string& value) {
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:proio.model.EventHeader.CollectionHeader.name)
}
#if LANG_CXX11
void EventHeader_CollectionHeader::set_name(::std::string&& value) {
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
    // @@protoc_insertion_point(field_set_rvalue:proio.model.EventHeader.CollectionHeader.name)
}
#endif
void EventHeader_CollectionHeader::set_name(const char* value) {
    GOOGLE_DCHECK(value != NULL);

    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:proio.model.EventHeader.CollectionHeader.name)
}
void EventHeader_CollectionHeader::set_name(const char* value, size_t size) {
    name_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                     ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:proio.model.EventHeader.CollectionHeader.name)
}
::std::string* EventHeader_CollectionHeader::mutable_name() {
    // @@protoc_insertion_point(field_mutable:proio.model.EventHeader.CollectionHeader.name)
    return name_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EventHeader_CollectionHeader::release_name() {
    // @@protoc_insertion_point(field_release:proio.model.EventHeader.CollectionHeader.name)

    return name_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventHeader_CollectionHeader::set_allocated_name(::std::string* name) {
    if (name != NULL) {
    } else {
    }
    name_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), name);
    // @@protoc_insertion_point(field_set_allocated:proio.model.EventHeader.CollectionHeader.name)
}

// uint32 id = 2;
void EventHeader_CollectionHeader::clear_id() { id_ = 0u; }
::google::protobuf::uint32 EventHeader_CollectionHeader::id() const {
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.CollectionHeader.id)
    return id_;
}
void EventHeader_CollectionHeader::set_id(::google::protobuf::uint32 value) {
    id_ = value;
    // @@protoc_insertion_point(field_set:proio.model.EventHeader.CollectionHeader.id)
}

// string type = 3;
void EventHeader_CollectionHeader::clear_type() {
    type_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EventHeader_CollectionHeader::type() const {
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.CollectionHeader.type)
    return type_.GetNoArena();
}
void EventHeader_CollectionHeader::set_type(const ::std::string& value) {
    type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:proio.model.EventHeader.CollectionHeader.type)
}
#if LANG_CXX11
void EventHeader_CollectionHeader::set_type(::std::string&& value) {
    type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
    // @@protoc_insertion_point(field_set_rvalue:proio.model.EventHeader.CollectionHeader.type)
}
#endif
void EventHeader_CollectionHeader::set_type(const char* value) {
    GOOGLE_DCHECK(value != NULL);

    type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:proio.model.EventHeader.CollectionHeader.type)
}
void EventHeader_CollectionHeader::set_type(const char* value, size_t size) {
    type_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                     ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:proio.model.EventHeader.CollectionHeader.type)
}
::std::string* EventHeader_CollectionHeader::mutable_type() {
    // @@protoc_insertion_point(field_mutable:proio.model.EventHeader.CollectionHeader.type)
    return type_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EventHeader_CollectionHeader::release_type() {
    // @@protoc_insertion_point(field_release:proio.model.EventHeader.CollectionHeader.type)

    return type_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventHeader_CollectionHeader::set_allocated_type(::std::string* type) {
    if (type != NULL) {
    } else {
    }
    type_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), type);
    // @@protoc_insertion_point(field_set_allocated:proio.model.EventHeader.CollectionHeader.type)
}

// uint32 payloadSize = 4;
void EventHeader_CollectionHeader::clear_payloadsize() { payloadsize_ = 0u; }
::google::protobuf::uint32 EventHeader_CollectionHeader::payloadsize() const {
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.CollectionHeader.payloadSize)
    return payloadsize_;
}
void EventHeader_CollectionHeader::set_payloadsize(::google::protobuf::uint32 value) {
    payloadsize_ = value;
    // @@protoc_insertion_point(field_set:proio.model.EventHeader.CollectionHeader.payloadSize)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int EventHeader::kVersionFieldNumber;
const int EventHeader::kRunNumberFieldNumber;
const int EventHeader::kEventNumberFieldNumber;
const int EventHeader::kTimeStampFieldNumber;
const int EventHeader::kDetectorFieldNumber;
const int EventHeader::kParamsFieldNumber;
const int EventHeader::kPayloadCollectionsFieldNumber;
const int EventHeader::kNUniqueIDsFieldNumber;
const int EventHeader::kDescriptionFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

EventHeader::EventHeader() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.model.EventHeader)
}
EventHeader::EventHeader(const EventHeader& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      payloadcollections_(from.payloadcollections_),
      _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    detector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (from.detector().size() > 0) {
        detector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                                    from.detector_);
    }
    description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (from.description().size() > 0) {
        description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                                       from.description_);
    }
    if (from.has_params()) {
        params_ = new ::proio::model::Params(*from.params_);
    } else {
        params_ = NULL;
    }
    ::memcpy(
        &runnumber_, &from.runnumber_,
        static_cast<size_t>(reinterpret_cast<char*>(&nuniqueids_) - reinterpret_cast<char*>(&runnumber_)) +
            sizeof(nuniqueids_));
    // @@protoc_insertion_point(copy_constructor:proio.model.EventHeader)
}

void EventHeader::SharedCtor() {
    detector_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    description_.UnsafeSetDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    ::memset(&params_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&nuniqueids_) - reinterpret_cast<char*>(&params_)) +
                 sizeof(nuniqueids_));
    _cached_size_ = 0;
}

EventHeader::~EventHeader() {
    // @@protoc_insertion_point(destructor:proio.model.EventHeader)
    SharedDtor();
}

void EventHeader::SharedDtor() {
    detector_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    description_.DestroyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (this != internal_default_instance()) delete params_;
}

void EventHeader::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* EventHeader::descriptor() {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const EventHeader& EventHeader::default_instance() {
    protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    return *internal_default_instance();
}

EventHeader* EventHeader::New(::google::protobuf::Arena* arena) const {
    EventHeader* n = new EventHeader;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void EventHeader::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.model.EventHeader)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    payloadcollections_.Clear();
    detector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
    if (GetArenaNoVirtual() == NULL && params_ != NULL) {
        delete params_;
    }
    params_ = NULL;
    ::memset(
        &runnumber_, 0,
        static_cast<size_t>(reinterpret_cast<char*>(&nuniqueids_) - reinterpret_cast<char*>(&runnumber_)) +
            sizeof(nuniqueids_));
    _internal_metadata_.Clear();
}

bool EventHeader::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.model.EventHeader)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // uint32 version = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(input, &version_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint64 runNumber = 2;
            case 2: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(input, &runnumber_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint64 eventNumber = 3;
            case 3: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(input, &eventnumber_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint64 timeStamp = 4;
            case 4: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(input, &timestamp_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // string detector = 5;
            case 5: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(42u /* 42 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(input,
                                                                                 this->mutable_detector()));
                    DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                        this->detector().data(), static_cast<int>(this->detector().length()),
                        ::google::protobuf::internal::WireFormatLite::PARSE,
                        "proio.model.EventHeader.detector"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // .proio.model.Params params = 6;
            case 6: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(50u /* 50 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(input,
                                                                                           mutable_params()));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // repeated .proio.model.EventHeader.CollectionHeader payloadCollections = 7;
            case 7: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(58u /* 58 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(
                        input, add_payloadcollections()));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint32 nUniqueIDs = 8;
            case 8: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(input, &nuniqueids_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // string description = 16;
            case 16: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(130u /* 130 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(
                        input, this->mutable_description()));
                    DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                        this->description().data(), static_cast<int>(this->description().length()),
                        ::google::protobuf::internal::WireFormatLite::PARSE,
                        "proio.model.EventHeader.description"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.model.EventHeader)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.model.EventHeader)
    return false;
#undef DO_
}

void EventHeader::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.model.EventHeader)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // uint32 version = 1;
    if (this->version() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->version(), output);
    }

    // uint64 runNumber = 2;
    if (this->runnumber() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(2, this->runnumber(), output);
    }

    // uint64 eventNumber = 3;
    if (this->eventnumber() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(3, this->eventnumber(), output);
    }

    // uint64 timeStamp = 4;
    if (this->timestamp() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->timestamp(), output);
    }

    // string detector = 5;
    if (this->detector().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detector().data(), static_cast<int>(this->detector().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proio.model.EventHeader.detector");
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(5, this->detector(), output);
    }

    // .proio.model.Params params = 6;
    if (this->has_params()) {
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(6, *this->params_, output);
    }

    // repeated .proio.model.EventHeader.CollectionHeader payloadCollections = 7;
    for (unsigned int i = 0, n = static_cast<unsigned int>(this->payloadcollections_size()); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(
            7, this->payloadcollections(static_cast<int>(i)), output);
    }

    // uint32 nUniqueIDs = 8;
    if (this->nuniqueids() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(8, this->nuniqueids(), output);
    }

    // string description = 16;
    if (this->description().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proio.model.EventHeader.description");
        ::google::protobuf::internal::WireFormatLite::WriteStringMaybeAliased(16, this->description(),
                                                                              output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.model.EventHeader)
}

::google::protobuf::uint8* EventHeader::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.model.EventHeader)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // uint32 version = 1;
    if (this->version() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->version(), target);
    }

    // uint64 runNumber = 2;
    if (this->runnumber() != 0) {
        target =
            ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(2, this->runnumber(), target);
    }

    // uint64 eventNumber = 3;
    if (this->eventnumber() != 0) {
        target =
            ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(3, this->eventnumber(), target);
    }

    // uint64 timeStamp = 4;
    if (this->timestamp() != 0) {
        target =
            ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->timestamp(), target);
    }

    // string detector = 5;
    if (this->detector().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->detector().data(), static_cast<int>(this->detector().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proio.model.EventHeader.detector");
        target =
            ::google::protobuf::internal::WireFormatLite::WriteStringToArray(5, this->detector(), target);
    }

    // .proio.model.Params params = 6;
    if (this->has_params()) {
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
            6, *this->params_, deterministic, target);
    }

    // repeated .proio.model.EventHeader.CollectionHeader payloadCollections = 7;
    for (unsigned int i = 0, n = static_cast<unsigned int>(this->payloadcollections_size()); i < n; i++) {
        target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
            7, this->payloadcollections(static_cast<int>(i)), deterministic, target);
    }

    // uint32 nUniqueIDs = 8;
    if (this->nuniqueids() != 0) {
        target =
            ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(8, this->nuniqueids(), target);
    }

    // string description = 16;
    if (this->description().size() > 0) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->description().data(), static_cast<int>(this->description().length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proio.model.EventHeader.description");
        target =
            ::google::protobuf::internal::WireFormatLite::WriteStringToArray(16, this->description(), target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.model.EventHeader)
    return target;
}

size_t EventHeader::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.model.EventHeader)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // repeated .proio.model.EventHeader.CollectionHeader payloadCollections = 7;
    {
        unsigned int count = static_cast<unsigned int>(this->payloadcollections_size());
        total_size += 1UL * count;
        for (unsigned int i = 0; i < count; i++) {
            total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(
                this->payloadcollections(static_cast<int>(i)));
        }
    }

    // string detector = 5;
    if (this->detector().size() > 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::StringSize(this->detector());
    }

    // string description = 16;
    if (this->description().size() > 0) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::StringSize(this->description());
    }

    // .proio.model.Params params = 6;
    if (this->has_params()) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*this->params_);
    }

    // uint64 runNumber = 2;
    if (this->runnumber() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->runnumber());
    }

    // uint64 eventNumber = 3;
    if (this->eventnumber() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->eventnumber());
    }

    // uint64 timeStamp = 4;
    if (this->timestamp() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->timestamp());
    }

    // uint32 version = 1;
    if (this->version() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(this->version());
    }

    // uint32 nUniqueIDs = 8;
    if (this->nuniqueids() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(this->nuniqueids());
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void EventHeader::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.model.EventHeader)
    GOOGLE_DCHECK_NE(&from, this);
    const EventHeader* source =
        ::google::protobuf::internal::DynamicCastToGenerated<const EventHeader>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.model.EventHeader)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.model.EventHeader)
        MergeFrom(*source);
    }
}

void EventHeader::MergeFrom(const EventHeader& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.model.EventHeader)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    payloadcollections_.MergeFrom(from.payloadcollections_);
    if (from.detector().size() > 0) {
        detector_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                                    from.detector_);
    }
    if (from.description().size() > 0) {
        description_.AssignWithDefault(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                                       from.description_);
    }
    if (from.has_params()) {
        mutable_params()->::proio::model::Params::MergeFrom(from.params());
    }
    if (from.runnumber() != 0) {
        set_runnumber(from.runnumber());
    }
    if (from.eventnumber() != 0) {
        set_eventnumber(from.eventnumber());
    }
    if (from.timestamp() != 0) {
        set_timestamp(from.timestamp());
    }
    if (from.version() != 0) {
        set_version(from.version());
    }
    if (from.nuniqueids() != 0) {
        set_nuniqueids(from.nuniqueids());
    }
}

void EventHeader::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.model.EventHeader)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void EventHeader::CopyFrom(const EventHeader& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.model.EventHeader)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool EventHeader::IsInitialized() const { return true; }

void EventHeader::Swap(EventHeader* other) {
    if (other == this) return;
    InternalSwap(other);
}
void EventHeader::InternalSwap(EventHeader* other) {
    using std::swap;
    payloadcollections_.InternalSwap(&other->payloadcollections_);
    detector_.Swap(&other->detector_);
    description_.Swap(&other->description_);
    swap(params_, other->params_);
    swap(runnumber_, other->runnumber_);
    swap(eventnumber_, other->eventnumber_);
    swap(timestamp_, other->timestamp_);
    swap(version_, other->version_);
    swap(nuniqueids_, other->nuniqueids_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata EventHeader::GetMetadata() const {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// EventHeader

// uint32 version = 1;
void EventHeader::clear_version() { version_ = 0u; }
::google::protobuf::uint32 EventHeader::version() const {
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.version)
    return version_;
}
void EventHeader::set_version(::google::protobuf::uint32 value) {
    version_ = value;
    // @@protoc_insertion_point(field_set:proio.model.EventHeader.version)
}

// uint64 runNumber = 2;
void EventHeader::clear_runnumber() { runnumber_ = GOOGLE_ULONGLONG(0); }
::google::protobuf::uint64 EventHeader::runnumber() const {
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.runNumber)
    return runnumber_;
}
void EventHeader::set_runnumber(::google::protobuf::uint64 value) {
    runnumber_ = value;
    // @@protoc_insertion_point(field_set:proio.model.EventHeader.runNumber)
}

// uint64 eventNumber = 3;
void EventHeader::clear_eventnumber() { eventnumber_ = GOOGLE_ULONGLONG(0); }
::google::protobuf::uint64 EventHeader::eventnumber() const {
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.eventNumber)
    return eventnumber_;
}
void EventHeader::set_eventnumber(::google::protobuf::uint64 value) {
    eventnumber_ = value;
    // @@protoc_insertion_point(field_set:proio.model.EventHeader.eventNumber)
}

// uint64 timeStamp = 4;
void EventHeader::clear_timestamp() { timestamp_ = GOOGLE_ULONGLONG(0); }
::google::protobuf::uint64 EventHeader::timestamp() const {
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.timeStamp)
    return timestamp_;
}
void EventHeader::set_timestamp(::google::protobuf::uint64 value) {
    timestamp_ = value;
    // @@protoc_insertion_point(field_set:proio.model.EventHeader.timeStamp)
}

// string detector = 5;
void EventHeader::clear_detector() {
    detector_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EventHeader::detector() const {
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.detector)
    return detector_.GetNoArena();
}
void EventHeader::set_detector(const ::std::string& value) {
    detector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:proio.model.EventHeader.detector)
}
#if LANG_CXX11
void EventHeader::set_detector(::std::string&& value) {
    detector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
    // @@protoc_insertion_point(field_set_rvalue:proio.model.EventHeader.detector)
}
#endif
void EventHeader::set_detector(const char* value) {
    GOOGLE_DCHECK(value != NULL);

    detector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::string(value));
    // @@protoc_insertion_point(field_set_char:proio.model.EventHeader.detector)
}
void EventHeader::set_detector(const char* value, size_t size) {
    detector_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                         ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:proio.model.EventHeader.detector)
}
::std::string* EventHeader::mutable_detector() {
    // @@protoc_insertion_point(field_mutable:proio.model.EventHeader.detector)
    return detector_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EventHeader::release_detector() {
    // @@protoc_insertion_point(field_release:proio.model.EventHeader.detector)

    return detector_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventHeader::set_allocated_detector(::std::string* detector) {
    if (detector != NULL) {
    } else {
    }
    detector_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), detector);
    // @@protoc_insertion_point(field_set_allocated:proio.model.EventHeader.detector)
}

// .proio.model.Params params = 6;
bool EventHeader::has_params() const { return this != internal_default_instance() && params_ != NULL; }
void EventHeader::clear_params() {
    if (GetArenaNoVirtual() == NULL && params_ != NULL) delete params_;
    params_ = NULL;
}
const ::proio::model::Params& EventHeader::params() const {
    const ::proio::model::Params* p = params_;
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.params)
    return p != NULL
               ? *p
               : *reinterpret_cast<const ::proio::model::Params*>(&::proio::model::_Params_default_instance_);
}
::proio::model::Params* EventHeader::mutable_params() {
    if (params_ == NULL) {
        params_ = new ::proio::model::Params;
    }
    // @@protoc_insertion_point(field_mutable:proio.model.EventHeader.params)
    return params_;
}
::proio::model::Params* EventHeader::release_params() {
    // @@protoc_insertion_point(field_release:proio.model.EventHeader.params)

    ::proio::model::Params* temp = params_;
    params_ = NULL;
    return temp;
}
void EventHeader::set_allocated_params(::proio::model::Params* params) {
    delete params_;
    params_ = params;
    if (params) {
    } else {
    }
    // @@protoc_insertion_point(field_set_allocated:proio.model.EventHeader.params)
}

// repeated .proio.model.EventHeader.CollectionHeader payloadCollections = 7;
int EventHeader::payloadcollections_size() const { return payloadcollections_.size(); }
void EventHeader::clear_payloadcollections() { payloadcollections_.Clear(); }
const ::proio::model::EventHeader_CollectionHeader& EventHeader::payloadcollections(int index) const {
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.payloadCollections)
    return payloadcollections_.Get(index);
}
::proio::model::EventHeader_CollectionHeader* EventHeader::mutable_payloadcollections(int index) {
    // @@protoc_insertion_point(field_mutable:proio.model.EventHeader.payloadCollections)
    return payloadcollections_.Mutable(index);
}
::proio::model::EventHeader_CollectionHeader* EventHeader::add_payloadcollections() {
    // @@protoc_insertion_point(field_add:proio.model.EventHeader.payloadCollections)
    return payloadcollections_.Add();
}
::google::protobuf::RepeatedPtrField< ::proio::model::EventHeader_CollectionHeader>*
EventHeader::mutable_payloadcollections() {
    // @@protoc_insertion_point(field_mutable_list:proio.model.EventHeader.payloadCollections)
    return &payloadcollections_;
}
const ::google::protobuf::RepeatedPtrField< ::proio::model::EventHeader_CollectionHeader>&
EventHeader::payloadcollections() const {
    // @@protoc_insertion_point(field_list:proio.model.EventHeader.payloadCollections)
    return payloadcollections_;
}

// uint32 nUniqueIDs = 8;
void EventHeader::clear_nuniqueids() { nuniqueids_ = 0u; }
::google::protobuf::uint32 EventHeader::nuniqueids() const {
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.nUniqueIDs)
    return nuniqueids_;
}
void EventHeader::set_nuniqueids(::google::protobuf::uint32 value) {
    nuniqueids_ = value;
    // @@protoc_insertion_point(field_set:proio.model.EventHeader.nUniqueIDs)
}

// string description = 16;
void EventHeader::clear_description() {
    description_.ClearToEmptyNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
const ::std::string& EventHeader::description() const {
    // @@protoc_insertion_point(field_get:proio.model.EventHeader.description)
    return description_.GetNoArena();
}
void EventHeader::set_description(const ::std::string& value) {
    description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), value);
    // @@protoc_insertion_point(field_set:proio.model.EventHeader.description)
}
#if LANG_CXX11
void EventHeader::set_description(::std::string&& value) {
    description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(), ::std::move(value));
    // @@protoc_insertion_point(field_set_rvalue:proio.model.EventHeader.description)
}
#endif
void EventHeader::set_description(const char* value) {
    GOOGLE_DCHECK(value != NULL);

    description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                            ::std::string(value));
    // @@protoc_insertion_point(field_set_char:proio.model.EventHeader.description)
}
void EventHeader::set_description(const char* value, size_t size) {
    description_.SetNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                            ::std::string(reinterpret_cast<const char*>(value), size));
    // @@protoc_insertion_point(field_set_pointer:proio.model.EventHeader.description)
}
::std::string* EventHeader::mutable_description() {
    // @@protoc_insertion_point(field_mutable:proio.model.EventHeader.description)
    return description_.MutableNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
::std::string* EventHeader::release_description() {
    // @@protoc_insertion_point(field_release:proio.model.EventHeader.description)

    return description_.ReleaseNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited());
}
void EventHeader::set_allocated_description(::std::string* description) {
    if (description != NULL) {
    } else {
    }
    description_.SetAllocatedNoArena(&::google::protobuf::internal::GetEmptyStringAlreadyInited(),
                                     description);
    // @@protoc_insertion_point(field_set_allocated:proio.model.EventHeader.description)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int IntParams::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

IntParams::IntParams() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.model.IntParams)
}
IntParams::IntParams(const IntParams& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL), array_(from.array_), _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    // @@protoc_insertion_point(copy_constructor:proio.model.IntParams)
}

void IntParams::SharedCtor() { _cached_size_ = 0; }

IntParams::~IntParams() {
    // @@protoc_insertion_point(destructor:proio.model.IntParams)
    SharedDtor();
}

void IntParams::SharedDtor() {}

void IntParams::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* IntParams::descriptor() {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const IntParams& IntParams::default_instance() {
    protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    return *internal_default_instance();
}

IntParams* IntParams::New(::google::protobuf::Arena* arena) const {
    IntParams* n = new IntParams;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void IntParams::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.model.IntParams)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    array_.Clear();
    _internal_metadata_.Clear();
}

bool IntParams::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.model.IntParams)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // repeated int32 array = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                         ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                        input, this->mutable_array())));
                } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                           static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                         ::google::protobuf::int32, ::google::protobuf::internal::WireFormatLite::TYPE_INT32>(
                        1, 10u, input, this->mutable_array())));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.model.IntParams)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.model.IntParams)
    return false;
#undef DO_
}

void IntParams::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.model.IntParams)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated int32 array = 1;
    if (this->array_size() > 0) {
        ::google::protobuf::internal::WireFormatLite::WriteTag(
            1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
        output->WriteVarint32(static_cast< ::google::protobuf::uint32>(_array_cached_byte_size_));
    }
    for (int i = 0, n = this->array_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteInt32NoTag(this->array(i), output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.model.IntParams)
}

::google::protobuf::uint8* IntParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.model.IntParams)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated int32 array = 1;
    if (this->array_size() > 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
            1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, target);
        target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
            static_cast< ::google::protobuf::uint32>(_array_cached_byte_size_), target);
        target = ::google::protobuf::internal::WireFormatLite::WriteInt32NoTagToArray(this->array_, target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.model.IntParams)
    return target;
}

size_t IntParams::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.model.IntParams)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // repeated int32 array = 1;
    {
        size_t data_size = ::google::protobuf::internal::WireFormatLite::Int32Size(this->array_);
        if (data_size > 0) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                                  static_cast< ::google::protobuf::int32>(data_size));
        }
        int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _array_cached_byte_size_ = cached_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        total_size += data_size;
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void IntParams::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.model.IntParams)
    GOOGLE_DCHECK_NE(&from, this);
    const IntParams* source = ::google::protobuf::internal::DynamicCastToGenerated<const IntParams>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.model.IntParams)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.model.IntParams)
        MergeFrom(*source);
    }
}

void IntParams::MergeFrom(const IntParams& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.model.IntParams)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    array_.MergeFrom(from.array_);
}

void IntParams::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.model.IntParams)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void IntParams::CopyFrom(const IntParams& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.model.IntParams)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool IntParams::IsInitialized() const { return true; }

void IntParams::Swap(IntParams* other) {
    if (other == this) return;
    InternalSwap(other);
}
void IntParams::InternalSwap(IntParams* other) {
    using std::swap;
    array_.InternalSwap(&other->array_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata IntParams::GetMetadata() const {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// IntParams

// repeated int32 array = 1;
int IntParams::array_size() const { return array_.size(); }
void IntParams::clear_array() { array_.Clear(); }
::google::protobuf::int32 IntParams::array(int index) const {
    // @@protoc_insertion_point(field_get:proio.model.IntParams.array)
    return array_.Get(index);
}
void IntParams::set_array(int index, ::google::protobuf::int32 value) {
    array_.Set(index, value);
    // @@protoc_insertion_point(field_set:proio.model.IntParams.array)
}
void IntParams::add_array(::google::protobuf::int32 value) {
    array_.Add(value);
    // @@protoc_insertion_point(field_add:proio.model.IntParams.array)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::int32>& IntParams::array() const {
    // @@protoc_insertion_point(field_list:proio.model.IntParams.array)
    return array_;
}
::google::protobuf::RepeatedField< ::google::protobuf::int32>* IntParams::mutable_array() {
    // @@protoc_insertion_point(field_mutable_list:proio.model.IntParams.array)
    return &array_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int FloatParams::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

FloatParams::FloatParams() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.model.FloatParams)
}
FloatParams::FloatParams(const FloatParams& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL), array_(from.array_), _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    // @@protoc_insertion_point(copy_constructor:proio.model.FloatParams)
}

void FloatParams::SharedCtor() { _cached_size_ = 0; }

FloatParams::~FloatParams() {
    // @@protoc_insertion_point(destructor:proio.model.FloatParams)
    SharedDtor();
}

void FloatParams::SharedDtor() {}

void FloatParams::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* FloatParams::descriptor() {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const FloatParams& FloatParams::default_instance() {
    protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    return *internal_default_instance();
}

FloatParams* FloatParams::New(::google::protobuf::Arena* arena) const {
    FloatParams* n = new FloatParams;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void FloatParams::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.model.FloatParams)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    array_.Clear();
    _internal_metadata_.Clear();
}

bool FloatParams::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.model.FloatParams)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // repeated float array = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                         float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                        input, this->mutable_array())));
                } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                           static_cast< ::google::protobuf::uint8>(13u /* 13 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                         float, ::google::protobuf::internal::WireFormatLite::TYPE_FLOAT>(
                        1, 10u, input, this->mutable_array())));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.model.FloatParams)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.model.FloatParams)
    return false;
#undef DO_
}

void FloatParams::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.model.FloatParams)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated float array = 1;
    if (this->array_size() > 0) {
        ::google::protobuf::internal::WireFormatLite::WriteTag(
            1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
        output->WriteVarint32(static_cast< ::google::protobuf::uint32>(_array_cached_byte_size_));
        ::google::protobuf::internal::WireFormatLite::WriteFloatArray(this->array().data(),
                                                                      this->array_size(), output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.model.FloatParams)
}

::google::protobuf::uint8* FloatParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.model.FloatParams)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated float array = 1;
    if (this->array_size() > 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
            1, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, target);
        target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
            static_cast< ::google::protobuf::uint32>(_array_cached_byte_size_), target);
        target = ::google::protobuf::internal::WireFormatLite::WriteFloatNoTagToArray(this->array_, target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.model.FloatParams)
    return target;
}

size_t FloatParams::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.model.FloatParams)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // repeated float array = 1;
    {
        unsigned int count = static_cast<unsigned int>(this->array_size());
        size_t data_size = 4UL * count;
        if (data_size > 0) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                                  static_cast< ::google::protobuf::int32>(data_size));
        }
        int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _array_cached_byte_size_ = cached_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        total_size += data_size;
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void FloatParams::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.model.FloatParams)
    GOOGLE_DCHECK_NE(&from, this);
    const FloatParams* source =
        ::google::protobuf::internal::DynamicCastToGenerated<const FloatParams>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.model.FloatParams)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.model.FloatParams)
        MergeFrom(*source);
    }
}

void FloatParams::MergeFrom(const FloatParams& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.model.FloatParams)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    array_.MergeFrom(from.array_);
}

void FloatParams::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.model.FloatParams)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void FloatParams::CopyFrom(const FloatParams& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.model.FloatParams)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool FloatParams::IsInitialized() const { return true; }

void FloatParams::Swap(FloatParams* other) {
    if (other == this) return;
    InternalSwap(other);
}
void FloatParams::InternalSwap(FloatParams* other) {
    using std::swap;
    array_.InternalSwap(&other->array_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata FloatParams::GetMetadata() const {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// FloatParams

// repeated float array = 1;
int FloatParams::array_size() const { return array_.size(); }
void FloatParams::clear_array() { array_.Clear(); }
float FloatParams::array(int index) const {
    // @@protoc_insertion_point(field_get:proio.model.FloatParams.array)
    return array_.Get(index);
}
void FloatParams::set_array(int index, float value) {
    array_.Set(index, value);
    // @@protoc_insertion_point(field_set:proio.model.FloatParams.array)
}
void FloatParams::add_array(float value) {
    array_.Add(value);
    // @@protoc_insertion_point(field_add:proio.model.FloatParams.array)
}
const ::google::protobuf::RepeatedField<float>& FloatParams::array() const {
    // @@protoc_insertion_point(field_list:proio.model.FloatParams.array)
    return array_;
}
::google::protobuf::RepeatedField<float>* FloatParams::mutable_array() {
    // @@protoc_insertion_point(field_mutable_list:proio.model.FloatParams.array)
    return &array_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int StringParams::kArrayFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

StringParams::StringParams() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.model.StringParams)
}
StringParams::StringParams(const StringParams& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL), array_(from.array_), _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    // @@protoc_insertion_point(copy_constructor:proio.model.StringParams)
}

void StringParams::SharedCtor() { _cached_size_ = 0; }

StringParams::~StringParams() {
    // @@protoc_insertion_point(destructor:proio.model.StringParams)
    SharedDtor();
}

void StringParams::SharedDtor() {}

void StringParams::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* StringParams::descriptor() {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const StringParams& StringParams::default_instance() {
    protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    return *internal_default_instance();
}

StringParams* StringParams::New(::google::protobuf::Arena* arena) const {
    StringParams* n = new StringParams;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void StringParams::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.model.StringParams)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    array_.Clear();
    _internal_metadata_.Clear();
}

bool StringParams::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.model.StringParams)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // repeated string array = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
                    DO_(::google::protobuf::internal::WireFormatLite::ReadString(input, this->add_array()));
                    DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                        this->array(this->array_size() - 1).data(),
                        static_cast<int>(this->array(this->array_size() - 1).length()),
                        ::google::protobuf::internal::WireFormatLite::PARSE,
                        "proio.model.StringParams.array"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.model.StringParams)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.model.StringParams)
    return false;
#undef DO_
}

void StringParams::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.model.StringParams)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated string array = 1;
    for (int i = 0, n = this->array_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->array(i).data(), static_cast<int>(this->array(i).length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proio.model.StringParams.array");
        ::google::protobuf::internal::WireFormatLite::WriteString(1, this->array(i), output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.model.StringParams)
}

::google::protobuf::uint8* StringParams::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.model.StringParams)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // repeated string array = 1;
    for (int i = 0, n = this->array_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
            this->array(i).data(), static_cast<int>(this->array(i).length()),
            ::google::protobuf::internal::WireFormatLite::SERIALIZE, "proio.model.StringParams.array");
        target = ::google::protobuf::internal::WireFormatLite::WriteStringToArray(1, this->array(i), target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.model.StringParams)
    return target;
}

size_t StringParams::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.model.StringParams)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // repeated string array = 1;
    total_size += 1 * ::google::protobuf::internal::FromIntSize(this->array_size());
    for (int i = 0, n = this->array_size(); i < n; i++) {
        total_size += ::google::protobuf::internal::WireFormatLite::StringSize(this->array(i));
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void StringParams::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.model.StringParams)
    GOOGLE_DCHECK_NE(&from, this);
    const StringParams* source =
        ::google::protobuf::internal::DynamicCastToGenerated<const StringParams>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.model.StringParams)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.model.StringParams)
        MergeFrom(*source);
    }
}

void StringParams::MergeFrom(const StringParams& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.model.StringParams)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    array_.MergeFrom(from.array_);
}

void StringParams::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.model.StringParams)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void StringParams::CopyFrom(const StringParams& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.model.StringParams)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool StringParams::IsInitialized() const { return true; }

void StringParams::Swap(StringParams* other) {
    if (other == this) return;
    InternalSwap(other);
}
void StringParams::InternalSwap(StringParams* other) {
    using std::swap;
    array_.InternalSwap(&other->array_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata StringParams::GetMetadata() const {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// StringParams

// repeated string array = 1;
int StringParams::array_size() const { return array_.size(); }
void StringParams::clear_array() { array_.Clear(); }
const ::std::string& StringParams::array(int index) const {
    // @@protoc_insertion_point(field_get:proio.model.StringParams.array)
    return array_.Get(index);
}
::std::string* StringParams::mutable_array(int index) {
    // @@protoc_insertion_point(field_mutable:proio.model.StringParams.array)
    return array_.Mutable(index);
}
void StringParams::set_array(int index, const ::std::string& value) {
    // @@protoc_insertion_point(field_set:proio.model.StringParams.array)
    array_.Mutable(index)->assign(value);
}
#if LANG_CXX11
void StringParams::set_array(int index, ::std::string&& value) {
    // @@protoc_insertion_point(field_set:proio.model.StringParams.array)
    array_.Mutable(index)->assign(std::move(value));
}
#endif
void StringParams::set_array(int index, const char* value) {
    GOOGLE_DCHECK(value != NULL);
    array_.Mutable(index)->assign(value);
    // @@protoc_insertion_point(field_set_char:proio.model.StringParams.array)
}
void StringParams::set_array(int index, const char* value, size_t size) {
    array_.Mutable(index)->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_set_pointer:proio.model.StringParams.array)
}
::std::string* StringParams::add_array() {
    // @@protoc_insertion_point(field_add_mutable:proio.model.StringParams.array)
    return array_.Add();
}
void StringParams::add_array(const ::std::string& value) {
    array_.Add()->assign(value);
    // @@protoc_insertion_point(field_add:proio.model.StringParams.array)
}
#if LANG_CXX11
void StringParams::add_array(::std::string&& value) {
    array_.Add(std::move(value));
    // @@protoc_insertion_point(field_add:proio.model.StringParams.array)
}
#endif
void StringParams::add_array(const char* value) {
    GOOGLE_DCHECK(value != NULL);
    array_.Add()->assign(value);
    // @@protoc_insertion_point(field_add_char:proio.model.StringParams.array)
}
void StringParams::add_array(const char* value, size_t size) {
    array_.Add()->assign(reinterpret_cast<const char*>(value), size);
    // @@protoc_insertion_point(field_add_pointer:proio.model.StringParams.array)
}
const ::google::protobuf::RepeatedPtrField< ::std::string>& StringParams::array() const {
    // @@protoc_insertion_point(field_list:proio.model.StringParams.array)
    return array_;
}
::google::protobuf::RepeatedPtrField< ::std::string>* StringParams::mutable_array() {
    // @@protoc_insertion_point(field_mutable_list:proio.model.StringParams.array)
    return &array_;
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Params::Params_IntsEntry::Params_IntsEntry() {}
Params::Params_IntsEntry::Params_IntsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Params::Params_IntsEntry::GetMetadata() const {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[5];
}
void Params::Params_IntsEntry::MergeFrom(const ::google::protobuf::Message& other) {
    ::google::protobuf::Message::MergeFrom(other);
}
void Params::Params_IntsEntry::MergeFrom(const Params_IntsEntry& other) { MergeFromInternal(other); }

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Params::Params_FloatsEntry::Params_FloatsEntry() {}
Params::Params_FloatsEntry::Params_FloatsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Params::Params_FloatsEntry::GetMetadata() const {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[6];
}
void Params::Params_FloatsEntry::MergeFrom(const ::google::protobuf::Message& other) {
    ::google::protobuf::Message::MergeFrom(other);
}
void Params::Params_FloatsEntry::MergeFrom(const Params_FloatsEntry& other) { MergeFromInternal(other); }

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

Params::Params_StringsEntry::Params_StringsEntry() {}
Params::Params_StringsEntry::Params_StringsEntry(::google::protobuf::Arena* arena) : SuperType(arena) {}
::google::protobuf::Metadata Params::Params_StringsEntry::GetMetadata() const {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[7];
}
void Params::Params_StringsEntry::MergeFrom(const ::google::protobuf::Message& other) {
    ::google::protobuf::Message::MergeFrom(other);
}
void Params::Params_StringsEntry::MergeFrom(const Params_StringsEntry& other) { MergeFromInternal(other); }

#if PROTOBUF_INLINE_NOT_IN_HEADERS
#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Params::kIntsFieldNumber;
const int Params::kFloatsFieldNumber;
const int Params::kStringsFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Params::Params() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.model.Params)
}
Params::Params(const Params& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL), _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ints_.MergeFrom(from.ints_);
    floats_.MergeFrom(from.floats_);
    strings_.MergeFrom(from.strings_);
    // @@protoc_insertion_point(copy_constructor:proio.model.Params)
}

void Params::SharedCtor() { _cached_size_ = 0; }

Params::~Params() {
    // @@protoc_insertion_point(destructor:proio.model.Params)
    SharedDtor();
}

void Params::SharedDtor() {}

void Params::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Params::descriptor() {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Params& Params::default_instance() {
    protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    return *internal_default_instance();
}

Params* Params::New(::google::protobuf::Arena* arena) const {
    Params* n = new Params;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void Params::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.model.Params)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ints_.Clear();
    floats_.Clear();
    strings_.Clear();
    _internal_metadata_.Clear();
}

bool Params::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.model.Params)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // map<string, .proio.model.IntParams> ints = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(10u /* 10 & 0xFF */)) {
                    Params_IntsEntry::Parser<
                        ::google::protobuf::internal::MapField<
                            Params_IntsEntry, ::std::string, ::proio::model::IntParams,
                            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE, 0>,
                        ::google::protobuf::Map< ::std::string, ::proio::model::IntParams> >
                        parser(&ints_);
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(input, &parser));
                    DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                        parser.key().data(), static_cast<int>(parser.key().length()),
                        ::google::protobuf::internal::WireFormatLite::PARSE,
                        "proio.model.Params.IntsEntry.key"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // map<string, .proio.model.FloatParams> floats = 2;
            case 2: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(18u /* 18 & 0xFF */)) {
                    Params_FloatsEntry::Parser<
                        ::google::protobuf::internal::MapField<
                            Params_FloatsEntry, ::std::string, ::proio::model::FloatParams,
                            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE, 0>,
                        ::google::protobuf::Map< ::std::string, ::proio::model::FloatParams> >
                        parser(&floats_);
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(input, &parser));
                    DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                        parser.key().data(), static_cast<int>(parser.key().length()),
                        ::google::protobuf::internal::WireFormatLite::PARSE,
                        "proio.model.Params.FloatsEntry.key"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // map<string, .proio.model.StringParams> strings = 3;
            case 3: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(26u /* 26 & 0xFF */)) {
                    Params_StringsEntry::Parser<
                        ::google::protobuf::internal::MapField<
                            Params_StringsEntry, ::std::string, ::proio::model::StringParams,
                            ::google::protobuf::internal::WireFormatLite::TYPE_STRING,
                            ::google::protobuf::internal::WireFormatLite::TYPE_MESSAGE, 0>,
                        ::google::protobuf::Map< ::std::string, ::proio::model::StringParams> >
                        parser(&strings_);
                    DO_(::google::protobuf::internal::WireFormatLite::ReadMessageNoVirtual(input, &parser));
                    DO_(::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                        parser.key().data(), static_cast<int>(parser.key().length()),
                        ::google::protobuf::internal::WireFormatLite::PARSE,
                        "proio.model.Params.StringsEntry.key"));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.model.Params)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.model.Params)
    return false;
#undef DO_
}

void Params::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.model.Params)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // map<string, .proio.model.IntParams> ints = 1;
    if (!this->ints().empty()) {
        typedef ::google::protobuf::Map< ::std::string, ::proio::model::IntParams>::const_pointer ConstPtr;
        typedef ConstPtr SortItem;
        typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
        struct Utf8Check {
            static void Check(ConstPtr p) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    p->first.data(), static_cast<int>(p->first.length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proio.model.Params.IntsEntry.key");
            }
        };

        if (output->IsSerializationDeterministic() && this->ints().size() > 1) {
            ::google::protobuf::scoped_array<SortItem> items(new SortItem[this->ints().size()]);
            typedef ::google::protobuf::Map< ::std::string, ::proio::model::IntParams>::size_type size_type;
            size_type n = 0;
            for (::google::protobuf::Map< ::std::string, ::proio::model::IntParams>::const_iterator
                     it = this->ints().begin();
                 it != this->ints().end(); ++it, ++n) {
                items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
            }
            ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
            ::google::protobuf::scoped_ptr<Params_IntsEntry> entry;
            for (size_type i = 0; i < n; i++) {
                entry.reset(ints_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first,
                                                  items[static_cast<ptrdiff_t>(i)]->second));
                ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
                Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
            }
        } else {
            ::google::protobuf::scoped_ptr<Params_IntsEntry> entry;
            for (::google::protobuf::Map< ::std::string, ::proio::model::IntParams>::const_iterator it =
                     this->ints().begin();
                 it != this->ints().end(); ++it) {
                entry.reset(ints_.NewEntryWrapper(it->first, it->second));
                ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(1, *entry, output);
                Utf8Check::Check(&*it);
            }
        }
    }

    // map<string, .proio.model.FloatParams> floats = 2;
    if (!this->floats().empty()) {
        typedef ::google::protobuf::Map< ::std::string, ::proio::model::FloatParams>::const_pointer ConstPtr;
        typedef ConstPtr SortItem;
        typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
        struct Utf8Check {
            static void Check(ConstPtr p) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    p->first.data(), static_cast<int>(p->first.length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proio.model.Params.FloatsEntry.key");
            }
        };

        if (output->IsSerializationDeterministic() && this->floats().size() > 1) {
            ::google::protobuf::scoped_array<SortItem> items(new SortItem[this->floats().size()]);
            typedef ::google::protobuf::Map< ::std::string, ::proio::model::FloatParams>::size_type size_type;
            size_type n = 0;
            for (::google::protobuf::Map< ::std::string, ::proio::model::FloatParams>::const_iterator
                     it = this->floats().begin();
                 it != this->floats().end(); ++it, ++n) {
                items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
            }
            ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
            ::google::protobuf::scoped_ptr<Params_FloatsEntry> entry;
            for (size_type i = 0; i < n; i++) {
                entry.reset(floats_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first,
                                                    items[static_cast<ptrdiff_t>(i)]->second));
                ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
                Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
            }
        } else {
            ::google::protobuf::scoped_ptr<Params_FloatsEntry> entry;
            for (::google::protobuf::Map< ::std::string, ::proio::model::FloatParams>::const_iterator it =
                     this->floats().begin();
                 it != this->floats().end(); ++it) {
                entry.reset(floats_.NewEntryWrapper(it->first, it->second));
                ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(2, *entry, output);
                Utf8Check::Check(&*it);
            }
        }
    }

    // map<string, .proio.model.StringParams> strings = 3;
    if (!this->strings().empty()) {
        typedef ::google::protobuf::Map< ::std::string, ::proio::model::StringParams>::const_pointer ConstPtr;
        typedef ConstPtr SortItem;
        typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
        struct Utf8Check {
            static void Check(ConstPtr p) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    p->first.data(), static_cast<int>(p->first.length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proio.model.Params.StringsEntry.key");
            }
        };

        if (output->IsSerializationDeterministic() && this->strings().size() > 1) {
            ::google::protobuf::scoped_array<SortItem> items(new SortItem[this->strings().size()]);
            typedef ::google::protobuf::Map< ::std::string, ::proio::model::StringParams>::size_type
                size_type;
            size_type n = 0;
            for (::google::protobuf::Map< ::std::string, ::proio::model::StringParams>::const_iterator
                     it = this->strings().begin();
                 it != this->strings().end(); ++it, ++n) {
                items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
            }
            ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
            ::google::protobuf::scoped_ptr<Params_StringsEntry> entry;
            for (size_type i = 0; i < n; i++) {
                entry.reset(strings_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first,
                                                     items[static_cast<ptrdiff_t>(i)]->second));
                ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
                Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
            }
        } else {
            ::google::protobuf::scoped_ptr<Params_StringsEntry> entry;
            for (::google::protobuf::Map< ::std::string, ::proio::model::StringParams>::const_iterator it =
                     this->strings().begin();
                 it != this->strings().end(); ++it) {
                entry.reset(strings_.NewEntryWrapper(it->first, it->second));
                ::google::protobuf::internal::WireFormatLite::WriteMessageMaybeToArray(3, *entry, output);
                Utf8Check::Check(&*it);
            }
        }
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.model.Params)
}

::google::protobuf::uint8* Params::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.model.Params)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // map<string, .proio.model.IntParams> ints = 1;
    if (!this->ints().empty()) {
        typedef ::google::protobuf::Map< ::std::string, ::proio::model::IntParams>::const_pointer ConstPtr;
        typedef ConstPtr SortItem;
        typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
        struct Utf8Check {
            static void Check(ConstPtr p) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    p->first.data(), static_cast<int>(p->first.length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proio.model.Params.IntsEntry.key");
            }
        };

        if (deterministic && this->ints().size() > 1) {
            ::google::protobuf::scoped_array<SortItem> items(new SortItem[this->ints().size()]);
            typedef ::google::protobuf::Map< ::std::string, ::proio::model::IntParams>::size_type size_type;
            size_type n = 0;
            for (::google::protobuf::Map< ::std::string, ::proio::model::IntParams>::const_iterator
                     it = this->ints().begin();
                 it != this->ints().end(); ++it, ++n) {
                items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
            }
            ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
            ::google::protobuf::scoped_ptr<Params_IntsEntry> entry;
            for (size_type i = 0; i < n; i++) {
                entry.reset(ints_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first,
                                                  items[static_cast<ptrdiff_t>(i)]->second));
                target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
                    1, *entry, deterministic, target);
                ;
                Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
            }
        } else {
            ::google::protobuf::scoped_ptr<Params_IntsEntry> entry;
            for (::google::protobuf::Map< ::std::string, ::proio::model::IntParams>::const_iterator it =
                     this->ints().begin();
                 it != this->ints().end(); ++it) {
                entry.reset(ints_.NewEntryWrapper(it->first, it->second));
                target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
                    1, *entry, deterministic, target);
                ;
                Utf8Check::Check(&*it);
            }
        }
    }

    // map<string, .proio.model.FloatParams> floats = 2;
    if (!this->floats().empty()) {
        typedef ::google::protobuf::Map< ::std::string, ::proio::model::FloatParams>::const_pointer ConstPtr;
        typedef ConstPtr SortItem;
        typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
        struct Utf8Check {
            static void Check(ConstPtr p) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    p->first.data(), static_cast<int>(p->first.length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proio.model.Params.FloatsEntry.key");
            }
        };

        if (deterministic && this->floats().size() > 1) {
            ::google::protobuf::scoped_array<SortItem> items(new SortItem[this->floats().size()]);
            typedef ::google::protobuf::Map< ::std::string, ::proio::model::FloatParams>::size_type size_type;
            size_type n = 0;
            for (::google::protobuf::Map< ::std::string, ::proio::model::FloatParams>::const_iterator
                     it = this->floats().begin();
                 it != this->floats().end(); ++it, ++n) {
                items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
            }
            ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
            ::google::protobuf::scoped_ptr<Params_FloatsEntry> entry;
            for (size_type i = 0; i < n; i++) {
                entry.reset(floats_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first,
                                                    items[static_cast<ptrdiff_t>(i)]->second));
                target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
                    2, *entry, deterministic, target);
                ;
                Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
            }
        } else {
            ::google::protobuf::scoped_ptr<Params_FloatsEntry> entry;
            for (::google::protobuf::Map< ::std::string, ::proio::model::FloatParams>::const_iterator it =
                     this->floats().begin();
                 it != this->floats().end(); ++it) {
                entry.reset(floats_.NewEntryWrapper(it->first, it->second));
                target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
                    2, *entry, deterministic, target);
                ;
                Utf8Check::Check(&*it);
            }
        }
    }

    // map<string, .proio.model.StringParams> strings = 3;
    if (!this->strings().empty()) {
        typedef ::google::protobuf::Map< ::std::string, ::proio::model::StringParams>::const_pointer ConstPtr;
        typedef ConstPtr SortItem;
        typedef ::google::protobuf::internal::CompareByDerefFirst<SortItem> Less;
        struct Utf8Check {
            static void Check(ConstPtr p) {
                ::google::protobuf::internal::WireFormatLite::VerifyUtf8String(
                    p->first.data(), static_cast<int>(p->first.length()),
                    ::google::protobuf::internal::WireFormatLite::SERIALIZE,
                    "proio.model.Params.StringsEntry.key");
            }
        };

        if (deterministic && this->strings().size() > 1) {
            ::google::protobuf::scoped_array<SortItem> items(new SortItem[this->strings().size()]);
            typedef ::google::protobuf::Map< ::std::string, ::proio::model::StringParams>::size_type
                size_type;
            size_type n = 0;
            for (::google::protobuf::Map< ::std::string, ::proio::model::StringParams>::const_iterator
                     it = this->strings().begin();
                 it != this->strings().end(); ++it, ++n) {
                items[static_cast<ptrdiff_t>(n)] = SortItem(&*it);
            }
            ::std::sort(&items[0], &items[static_cast<ptrdiff_t>(n)], Less());
            ::google::protobuf::scoped_ptr<Params_StringsEntry> entry;
            for (size_type i = 0; i < n; i++) {
                entry.reset(strings_.NewEntryWrapper(items[static_cast<ptrdiff_t>(i)]->first,
                                                     items[static_cast<ptrdiff_t>(i)]->second));
                target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
                    3, *entry, deterministic, target);
                ;
                Utf8Check::Check(items[static_cast<ptrdiff_t>(i)]);
            }
        } else {
            ::google::protobuf::scoped_ptr<Params_StringsEntry> entry;
            for (::google::protobuf::Map< ::std::string, ::proio::model::StringParams>::const_iterator it =
                     this->strings().begin();
                 it != this->strings().end(); ++it) {
                entry.reset(strings_.NewEntryWrapper(it->first, it->second));
                target = ::google::protobuf::internal::WireFormatLite::InternalWriteMessageNoVirtualToArray(
                    3, *entry, deterministic, target);
                ;
                Utf8Check::Check(&*it);
            }
        }
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.model.Params)
    return target;
}

size_t Params::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.model.Params)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // map<string, .proio.model.IntParams> ints = 1;
    total_size += 1 * ::google::protobuf::internal::FromIntSize(this->ints_size());
    {
        ::google::protobuf::scoped_ptr<Params_IntsEntry> entry;
        for (::google::protobuf::Map< ::std::string, ::proio::model::IntParams>::const_iterator it =
                 this->ints().begin();
             it != this->ints().end(); ++it) {
            entry.reset(ints_.NewEntryWrapper(it->first, it->second));
            total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*entry);
        }
    }

    // map<string, .proio.model.FloatParams> floats = 2;
    total_size += 1 * ::google::protobuf::internal::FromIntSize(this->floats_size());
    {
        ::google::protobuf::scoped_ptr<Params_FloatsEntry> entry;
        for (::google::protobuf::Map< ::std::string, ::proio::model::FloatParams>::const_iterator it =
                 this->floats().begin();
             it != this->floats().end(); ++it) {
            entry.reset(floats_.NewEntryWrapper(it->first, it->second));
            total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*entry);
        }
    }

    // map<string, .proio.model.StringParams> strings = 3;
    total_size += 1 * ::google::protobuf::internal::FromIntSize(this->strings_size());
    {
        ::google::protobuf::scoped_ptr<Params_StringsEntry> entry;
        for (::google::protobuf::Map< ::std::string, ::proio::model::StringParams>::const_iterator it =
                 this->strings().begin();
             it != this->strings().end(); ++it) {
            entry.reset(strings_.NewEntryWrapper(it->first, it->second));
            total_size += ::google::protobuf::internal::WireFormatLite::MessageSizeNoVirtual(*entry);
        }
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void Params::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.model.Params)
    GOOGLE_DCHECK_NE(&from, this);
    const Params* source = ::google::protobuf::internal::DynamicCastToGenerated<const Params>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.model.Params)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.model.Params)
        MergeFrom(*source);
    }
}

void Params::MergeFrom(const Params& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.model.Params)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    ints_.MergeFrom(from.ints_);
    floats_.MergeFrom(from.floats_);
    strings_.MergeFrom(from.strings_);
}

void Params::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.model.Params)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void Params::CopyFrom(const Params& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.model.Params)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool Params::IsInitialized() const { return true; }

void Params::Swap(Params* other) {
    if (other == this) return;
    InternalSwap(other);
}
void Params::InternalSwap(Params* other) {
    using std::swap;
    ints_.Swap(&other->ints_);
    floats_.Swap(&other->floats_);
    strings_.Swap(&other->strings_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Params::GetMetadata() const {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Params

// map<string, .proio.model.IntParams> ints = 1;
int Params::ints_size() const { return ints_.size(); }
void Params::clear_ints() { ints_.Clear(); }
const ::google::protobuf::Map< ::std::string, ::proio::model::IntParams>& Params::ints() const {
    // @@protoc_insertion_point(field_map:proio.model.Params.ints)
    return ints_.GetMap();
}
::google::protobuf::Map< ::std::string, ::proio::model::IntParams>* Params::mutable_ints() {
    // @@protoc_insertion_point(field_mutable_map:proio.model.Params.ints)
    return ints_.MutableMap();
}

// map<string, .proio.model.FloatParams> floats = 2;
int Params::floats_size() const { return floats_.size(); }
void Params::clear_floats() { floats_.Clear(); }
const ::google::protobuf::Map< ::std::string, ::proio::model::FloatParams>& Params::floats() const {
    // @@protoc_insertion_point(field_map:proio.model.Params.floats)
    return floats_.GetMap();
}
::google::protobuf::Map< ::std::string, ::proio::model::FloatParams>* Params::mutable_floats() {
    // @@protoc_insertion_point(field_mutable_map:proio.model.Params.floats)
    return floats_.MutableMap();
}

// map<string, .proio.model.StringParams> strings = 3;
int Params::strings_size() const { return strings_.size(); }
void Params::clear_strings() { strings_.Clear(); }
const ::google::protobuf::Map< ::std::string, ::proio::model::StringParams>& Params::strings() const {
    // @@protoc_insertion_point(field_map:proio.model.Params.strings)
    return strings_.GetMap();
}
::google::protobuf::Map< ::std::string, ::proio::model::StringParams>* Params::mutable_strings() {
    // @@protoc_insertion_point(field_mutable_map:proio.model.Params.strings)
    return strings_.MutableMap();
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Reference::kCollIDFieldNumber;
const int Reference::kEntryIDFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Reference::Reference() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.model.Reference)
}
Reference::Reference(const Reference& from)
    : ::google::protobuf::Message(), _internal_metadata_(NULL), _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::memcpy(&collid_, &from.collid_,
             static_cast<size_t>(reinterpret_cast<char*>(&entryid_) - reinterpret_cast<char*>(&collid_)) +
                 sizeof(entryid_));
    // @@protoc_insertion_point(copy_constructor:proio.model.Reference)
}

void Reference::SharedCtor() {
    ::memset(&collid_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&entryid_) - reinterpret_cast<char*>(&collid_)) +
                 sizeof(entryid_));
    _cached_size_ = 0;
}

Reference::~Reference() {
    // @@protoc_insertion_point(destructor:proio.model.Reference)
    SharedDtor();
}

void Reference::SharedDtor() {}

void Reference::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Reference::descriptor() {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Reference& Reference::default_instance() {
    protobuf_proio_2fmodel_2fproio_2eproto::InitDefaults();
    return *internal_default_instance();
}

Reference* Reference::New(::google::protobuf::Arena* arena) const {
    Reference* n = new Reference;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void Reference::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.model.Reference)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    ::memset(&collid_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&entryid_) - reinterpret_cast<char*>(&collid_)) +
                 sizeof(entryid_));
    _internal_metadata_.Clear();
}

bool Reference::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.model.Reference)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(127u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // uint32 collID = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(input, &collid_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint32 entryID = 2;
            case 2: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(input, &entryid_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.model.Reference)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.model.Reference)
    return false;
#undef DO_
}

void Reference::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.model.Reference)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // uint32 collID = 1;
    if (this->collid() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->collid(), output);
    }

    // uint32 entryID = 2;
    if (this->entryid() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(2, this->entryid(), output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.model.Reference)
}

::google::protobuf::uint8* Reference::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.model.Reference)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // uint32 collID = 1;
    if (this->collid() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->collid(), target);
    }

    // uint32 entryID = 2;
    if (this->entryid() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(2, this->entryid(), target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.model.Reference)
    return target;
}

size_t Reference::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.model.Reference)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // uint32 collID = 1;
    if (this->collid() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(this->collid());
    }

    // uint32 entryID = 2;
    if (this->entryid() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(this->entryid());
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void Reference::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.model.Reference)
    GOOGLE_DCHECK_NE(&from, this);
    const Reference* source = ::google::protobuf::internal::DynamicCastToGenerated<const Reference>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.model.Reference)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.model.Reference)
        MergeFrom(*source);
    }
}

void Reference::MergeFrom(const Reference& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.model.Reference)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    if (from.collid() != 0) {
        set_collid(from.collid());
    }
    if (from.entryid() != 0) {
        set_entryid(from.entryid());
    }
}

void Reference::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.model.Reference)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void Reference::CopyFrom(const Reference& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.model.Reference)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool Reference::IsInitialized() const { return true; }

void Reference::Swap(Reference* other) {
    if (other == this) return;
    InternalSwap(other);
}
void Reference::InternalSwap(Reference* other) {
    using std::swap;
    swap(collid_, other->collid_);
    swap(entryid_, other->entryid_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Reference::GetMetadata() const {
    protobuf_proio_2fmodel_2fproio_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_proio_2fmodel_2fproio_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Reference

// uint32 collID = 1;
void Reference::clear_collid() { collid_ = 0u; }
::google::protobuf::uint32 Reference::collid() const {
    // @@protoc_insertion_point(field_get:proio.model.Reference.collID)
    return collid_;
}
void Reference::set_collid(::google::protobuf::uint32 value) {
    collid_ = value;
    // @@protoc_insertion_point(field_set:proio.model.Reference.collID)
}

// uint32 entryID = 2;
void Reference::clear_entryid() { entryid_ = 0u; }
::google::protobuf::uint32 Reference::entryid() const {
    // @@protoc_insertion_point(field_get:proio.model.Reference.entryID)
    return entryid_;
}
void Reference::set_entryid(::google::protobuf::uint32 value) {
    entryid_ = value;
    // @@protoc_insertion_point(field_set:proio.model.Reference.entryID)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace model
}  // namespace proio

// @@protoc_insertion_point(global_scope)

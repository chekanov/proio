// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: model/promc/promc.proto

#define INTERNAL_SUPPRESS_PROTOBUF_FIELD_DEPRECATION
#include "model/promc/promc.pb.h"

#include <algorithm>

#include <google/protobuf/descriptor.h>
#include <google/protobuf/generated_message_reflection.h>
#include <google/protobuf/io/coded_stream.h>
#include <google/protobuf/reflection_ops.h>
#include <google/protobuf/stubs/common.h>
#include <google/protobuf/stubs/once.h>
#include <google/protobuf/stubs/port.h>
#include <google/protobuf/wire_format.h>
#include <google/protobuf/wire_format_lite_inl.h>
// @@protoc_insertion_point(includes)

namespace proio {
namespace model {
namespace promc {
class ParticleDefaultTypeInternal {
   public:
    ::google::protobuf::internal::ExplicitlyConstructed<Particle> _instance;
} _Particle_default_instance_;

namespace protobuf_model_2fpromc_2fpromc_2eproto {

namespace {

::google::protobuf::Metadata file_level_metadata[1];

}  // namespace

PROTOBUF_CONSTEXPR_VAR::google::protobuf::internal::ParseTableField const
    TableStruct::entries[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {0, 0, 0, ::google::protobuf::internal::kInvalidMask, 0, 0},
};

PROTOBUF_CONSTEXPR_VAR::google::protobuf::internal::AuxillaryParseTableField const
    TableStruct::aux[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        ::google::protobuf::internal::AuxillaryParseTableField(),
};
PROTOBUF_CONSTEXPR_VAR::google::protobuf::internal::ParseTable const
    TableStruct::schema[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        {NULL, NULL, 0, -1, -1, -1, -1, NULL, false},
};

const ::google::protobuf::uint32 TableStruct::offsets[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
    ~0u,  // no _has_bits_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, _internal_metadata_),
    ~0u,  // no _extensions_
    ~0u,  // no _oneof_case_
    ~0u,  // no _weak_field_map_
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, gen_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, pdg_id_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, status_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, mass_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, px_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, py_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, pz_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, parents_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, children_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, barcode_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, x_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, y_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, z_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, t_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, weight_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, charge_),
    GOOGLE_PROTOBUF_GENERATED_MESSAGE_FIELD_OFFSET(Particle, energy_),
};
static const ::google::protobuf::internal::MigrationSchema schemas[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(
    protodesc_cold) = {
    {0, -1, sizeof(Particle)},
};

static ::google::protobuf::Message const* const file_default_instances[] = {
    reinterpret_cast<const ::google::protobuf::Message*>(&_Particle_default_instance_),
};

namespace {

void protobuf_AssignDescriptors() {
    AddDescriptors();
    ::google::protobuf::MessageFactory* factory = NULL;
    AssignDescriptors("model/promc/promc.proto", schemas, file_default_instances, TableStruct::offsets,
                      factory, file_level_metadata, NULL, NULL);
}

void protobuf_AssignDescriptorsOnce() {
    static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
    ::google::protobuf::GoogleOnceInit(&once, &protobuf_AssignDescriptors);
}

void protobuf_RegisterTypes(const ::std::string&) GOOGLE_ATTRIBUTE_COLD;
void protobuf_RegisterTypes(const ::std::string&) {
    protobuf_AssignDescriptorsOnce();
    ::google::protobuf::internal::RegisterAllTypes(file_level_metadata, 1);
}

}  // namespace
void TableStruct::InitDefaultsImpl() {
    GOOGLE_PROTOBUF_VERIFY_VERSION;

    ::google::protobuf::internal::InitProtobufDefaults();
    _Particle_default_instance_._instance.DefaultConstruct();
    ::google::protobuf::internal::OnShutdownDestroyMessage(&_Particle_default_instance_);
}

void InitDefaults() {
    static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
    ::google::protobuf::GoogleOnceInit(&once, &TableStruct::InitDefaultsImpl);
}
namespace {
void AddDescriptorsImpl() {
    InitDefaults();
    static const char descriptor[] GOOGLE_ATTRIBUTE_SECTION_VARIABLE(protodesc_cold) = {
        "\n\027model/promc/promc.proto\022\021proio.model.p"
        "romc\"\374\001\n\010Particle\022\016\n\006gen_id\030\001 \001(\r\022\016\n\006pdg"
        "_id\030\002 \001(\021\022\016\n\006status\030\003 \001(\r\022\014\n\004mass\030\004 \001(\004\022"
        "\n\n\002Px\030\005 \001(\022\022\n\n\002Py\030\006 \001(\022\022\n\n\002Pz\030\007 "
        "\001(\022\022\017\n\007p"
        "arents\030\010 \003(\004\022\020\n\010children\030\t \003(\004\022\017\n\007barcod"
        "e\030\n \001(\021\022\t\n\001X\030\013 \001(\021\022\t\n\001Y\030\014 \001(\021\022\t\n\001Z\030\r "
        "\001(\021"
        "\022\t\n\001T\030\016 \001(\r\022\016\n\006weight\030\017 \001(\004\022\016\n\006charge\030\020 "
        "\001(\021\022\016\n\006energy\030\021 \001(\022BI\n\013proio.modelB\005Prom"
        "cZ3github.com/decibelcooper/proio/go-pro"
        "io/model/promcb\006proto3"};
    ::google::protobuf::DescriptorPool::InternalAddGeneratedFile(descriptor, 382);
    ::google::protobuf::MessageFactory::InternalRegisterGeneratedFile("model/promc/promc.proto",
                                                                      &protobuf_RegisterTypes);
}
}  // anonymous namespace

void AddDescriptors() {
    static GOOGLE_PROTOBUF_DECLARE_ONCE(once);
    ::google::protobuf::GoogleOnceInit(&once, &AddDescriptorsImpl);
}
// Force AddDescriptors() to be called at dynamic initialization time.
struct StaticDescriptorInitializer {
    StaticDescriptorInitializer() { AddDescriptors(); }
} static_descriptor_initializer;

}  // namespace protobuf_model_2fpromc_2fpromc_2eproto

// ===================================================================

#if !defined(_MSC_VER) || _MSC_VER >= 1900
const int Particle::kGenIdFieldNumber;
const int Particle::kPdgIdFieldNumber;
const int Particle::kStatusFieldNumber;
const int Particle::kMassFieldNumber;
const int Particle::kPxFieldNumber;
const int Particle::kPyFieldNumber;
const int Particle::kPzFieldNumber;
const int Particle::kParentsFieldNumber;
const int Particle::kChildrenFieldNumber;
const int Particle::kBarcodeFieldNumber;
const int Particle::kXFieldNumber;
const int Particle::kYFieldNumber;
const int Particle::kZFieldNumber;
const int Particle::kTFieldNumber;
const int Particle::kWeightFieldNumber;
const int Particle::kChargeFieldNumber;
const int Particle::kEnergyFieldNumber;
#endif  // !defined(_MSC_VER) || _MSC_VER >= 1900

Particle::Particle() : ::google::protobuf::Message(), _internal_metadata_(NULL) {
    if (GOOGLE_PREDICT_TRUE(this != internal_default_instance())) {
        protobuf_model_2fpromc_2fpromc_2eproto::InitDefaults();
    }
    SharedCtor();
    // @@protoc_insertion_point(constructor:proio.model.promc.Particle)
}
Particle::Particle(const Particle& from)
    : ::google::protobuf::Message(),
      _internal_metadata_(NULL),
      parents_(from.parents_),
      children_(from.children_),
      _cached_size_(0) {
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::memcpy(&gen_id_, &from.gen_id_,
             static_cast<size_t>(reinterpret_cast<char*>(&charge_) - reinterpret_cast<char*>(&gen_id_)) +
                 sizeof(charge_));
    // @@protoc_insertion_point(copy_constructor:proio.model.promc.Particle)
}

void Particle::SharedCtor() {
    ::memset(&gen_id_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&charge_) - reinterpret_cast<char*>(&gen_id_)) +
                 sizeof(charge_));
    _cached_size_ = 0;
}

Particle::~Particle() {
    // @@protoc_insertion_point(destructor:proio.model.promc.Particle)
    SharedDtor();
}

void Particle::SharedDtor() {}

void Particle::SetCachedSize(int size) const {
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
}
const ::google::protobuf::Descriptor* Particle::descriptor() {
    protobuf_model_2fpromc_2fpromc_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_model_2fpromc_2fpromc_2eproto::file_level_metadata[kIndexInFileMessages].descriptor;
}

const Particle& Particle::default_instance() {
    protobuf_model_2fpromc_2fpromc_2eproto::InitDefaults();
    return *internal_default_instance();
}

Particle* Particle::New(::google::protobuf::Arena* arena) const {
    Particle* n = new Particle;
    if (arena != NULL) {
        arena->Own(n);
    }
    return n;
}

void Particle::Clear() {
    // @@protoc_insertion_point(message_clear_start:proio.model.promc.Particle)
    ::google::protobuf::uint32 cached_has_bits = 0;
    // Prevent compiler warnings about cached_has_bits being unused
    (void)cached_has_bits;

    parents_.Clear();
    children_.Clear();
    ::memset(&gen_id_, 0,
             static_cast<size_t>(reinterpret_cast<char*>(&charge_) - reinterpret_cast<char*>(&gen_id_)) +
                 sizeof(charge_));
    _internal_metadata_.Clear();
}

bool Particle::MergePartialFromCodedStream(::google::protobuf::io::CodedInputStream* input) {
#define DO_(EXPRESSION) \
    if (!GOOGLE_PREDICT_TRUE(EXPRESSION)) goto failure
    ::google::protobuf::uint32 tag;
    // @@protoc_insertion_point(parse_start:proio.model.promc.Particle)
    for (;;) {
        ::std::pair< ::google::protobuf::uint32, bool> p = input->ReadTagWithCutoffNoLastTag(16383u);
        tag = p.first;
        if (!p.second) goto handle_unusual;
        switch (::google::protobuf::internal::WireFormatLite::GetTagFieldNumber(tag)) {
            // uint32 gen_id = 1;
            case 1: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(8u /* 8 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(input, &gen_id_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // sint32 pdg_id = 2;
            case 2: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(16u /* 16 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::int32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(input, &pdg_id_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint32 status = 3;
            case 3: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(24u /* 24 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(input, &status_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint64 mass = 4;
            case 4: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(32u /* 32 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(input, &mass_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // sint64 Px = 5;
            case 5: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(40u /* 40 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::int64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(input, &px_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // sint64 Py = 6;
            case 6: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(48u /* 48 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::int64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(input, &py_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // sint64 Pz = 7;
            case 7: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(56u /* 56 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::int64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(input, &pz_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // repeated uint64 parents = 8;
            case 8: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(66u /* 66 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                        input, this->mutable_parents())));
                } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                           static_cast< ::google::protobuf::uint8>(64u /* 64 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                        1, 66u, input, this->mutable_parents())));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // repeated uint64 children = 9;
            case 9: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(74u /* 74 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPackedPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                        input, this->mutable_children())));
                } else if (static_cast< ::google::protobuf::uint8>(tag) ==
                           static_cast< ::google::protobuf::uint8>(72u /* 72 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadRepeatedPrimitiveNoInline<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(
                        1, 74u, input, this->mutable_children())));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // sint32 barcode = 10;
            case 10: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(80u /* 80 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::int32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(input, &barcode_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // sint32 X = 11;
            case 11: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(88u /* 88 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::int32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(input, &x_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // sint32 Y = 12;
            case 12: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(96u /* 96 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::int32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(input, &y_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // sint32 Z = 13;
            case 13: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(104u /* 104 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::int32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(input, &z_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint32 T = 14;
            case 14: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(112u /* 112 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT32>(input, &t_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // uint64 weight = 15;
            case 15: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(120u /* 120 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::uint64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_UINT64>(input, &weight_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // sint32 charge = 16;
            case 16: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(128u /* 128 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::int32,
                         ::google::protobuf::internal::WireFormatLite::TYPE_SINT32>(input, &charge_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            // sint64 energy = 17;
            case 17: {
                if (static_cast< ::google::protobuf::uint8>(tag) ==
                    static_cast< ::google::protobuf::uint8>(136u /* 136 & 0xFF */)) {
                    DO_((::google::protobuf::internal::WireFormatLite::ReadPrimitive<
                         ::google::protobuf::int64,
                         ::google::protobuf::internal::WireFormatLite::TYPE_SINT64>(input, &energy_)));
                } else {
                    goto handle_unusual;
                }
                break;
            }

            default: {
            handle_unusual:
                if (tag == 0) {
                    goto success;
                }
                DO_(::google::protobuf::internal::WireFormat::SkipField(
                    input, tag, _internal_metadata_.mutable_unknown_fields()));
                break;
            }
        }
    }
success:
    // @@protoc_insertion_point(parse_success:proio.model.promc.Particle)
    return true;
failure:
    // @@protoc_insertion_point(parse_failure:proio.model.promc.Particle)
    return false;
#undef DO_
}

void Particle::SerializeWithCachedSizes(::google::protobuf::io::CodedOutputStream* output) const {
    // @@protoc_insertion_point(serialize_start:proio.model.promc.Particle)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // uint32 gen_id = 1;
    if (this->gen_id() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(1, this->gen_id(), output);
    }

    // sint32 pdg_id = 2;
    if (this->pdg_id() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteSInt32(2, this->pdg_id(), output);
    }

    // uint32 status = 3;
    if (this->status() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(3, this->status(), output);
    }

    // uint64 mass = 4;
    if (this->mass() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(4, this->mass(), output);
    }

    // sint64 Px = 5;
    if (this->px() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteSInt64(5, this->px(), output);
    }

    // sint64 Py = 6;
    if (this->py() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteSInt64(6, this->py(), output);
    }

    // sint64 Pz = 7;
    if (this->pz() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteSInt64(7, this->pz(), output);
    }

    // repeated uint64 parents = 8;
    if (this->parents_size() > 0) {
        ::google::protobuf::internal::WireFormatLite::WriteTag(
            8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
        output->WriteVarint32(static_cast< ::google::protobuf::uint32>(_parents_cached_byte_size_));
    }
    for (int i = 0, n = this->parents_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(this->parents(i), output);
    }

    // repeated uint64 children = 9;
    if (this->children_size() > 0) {
        ::google::protobuf::internal::WireFormatLite::WriteTag(
            9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, output);
        output->WriteVarint32(static_cast< ::google::protobuf::uint32>(_children_cached_byte_size_));
    }
    for (int i = 0, n = this->children_size(); i < n; i++) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTag(this->children(i), output);
    }

    // sint32 barcode = 10;
    if (this->barcode() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteSInt32(10, this->barcode(), output);
    }

    // sint32 X = 11;
    if (this->x() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteSInt32(11, this->x(), output);
    }

    // sint32 Y = 12;
    if (this->y() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteSInt32(12, this->y(), output);
    }

    // sint32 Z = 13;
    if (this->z() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteSInt32(13, this->z(), output);
    }

    // uint32 T = 14;
    if (this->t() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt32(14, this->t(), output);
    }

    // uint64 weight = 15;
    if (this->weight() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteUInt64(15, this->weight(), output);
    }

    // sint32 charge = 16;
    if (this->charge() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteSInt32(16, this->charge(), output);
    }

    // sint64 energy = 17;
    if (this->energy() != 0) {
        ::google::protobuf::internal::WireFormatLite::WriteSInt64(17, this->energy(), output);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        ::google::protobuf::internal::WireFormat::SerializeUnknownFields(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            output);
    }
    // @@protoc_insertion_point(serialize_end:proio.model.promc.Particle)
}

::google::protobuf::uint8* Particle::InternalSerializeWithCachedSizesToArray(
    bool deterministic, ::google::protobuf::uint8* target) const {
    (void)deterministic;  // Unused
    // @@protoc_insertion_point(serialize_to_array_start:proio.model.promc.Particle)
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    // uint32 gen_id = 1;
    if (this->gen_id() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(1, this->gen_id(), target);
    }

    // sint32 pdg_id = 2;
    if (this->pdg_id() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(2, this->pdg_id(), target);
    }

    // uint32 status = 3;
    if (this->status() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(3, this->status(), target);
    }

    // uint64 mass = 4;
    if (this->mass() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(4, this->mass(), target);
    }

    // sint64 Px = 5;
    if (this->px() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(5, this->px(), target);
    }

    // sint64 Py = 6;
    if (this->py() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(6, this->py(), target);
    }

    // sint64 Pz = 7;
    if (this->pz() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(7, this->pz(), target);
    }

    // repeated uint64 parents = 8;
    if (this->parents_size() > 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
            8, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, target);
        target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
            static_cast< ::google::protobuf::uint32>(_parents_cached_byte_size_), target);
        target =
            ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTagToArray(this->parents_, target);
    }

    // repeated uint64 children = 9;
    if (this->children_size() > 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteTagToArray(
            9, ::google::protobuf::internal::WireFormatLite::WIRETYPE_LENGTH_DELIMITED, target);
        target = ::google::protobuf::io::CodedOutputStream::WriteVarint32ToArray(
            static_cast< ::google::protobuf::uint32>(_children_cached_byte_size_), target);
        target =
            ::google::protobuf::internal::WireFormatLite::WriteUInt64NoTagToArray(this->children_, target);
    }

    // sint32 barcode = 10;
    if (this->barcode() != 0) {
        target =
            ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(10, this->barcode(), target);
    }

    // sint32 X = 11;
    if (this->x() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(11, this->x(), target);
    }

    // sint32 Y = 12;
    if (this->y() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(12, this->y(), target);
    }

    // sint32 Z = 13;
    if (this->z() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(13, this->z(), target);
    }

    // uint32 T = 14;
    if (this->t() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt32ToArray(14, this->t(), target);
    }

    // uint64 weight = 15;
    if (this->weight() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteUInt64ToArray(15, this->weight(), target);
    }

    // sint32 charge = 16;
    if (this->charge() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteSInt32ToArray(16, this->charge(), target);
    }

    // sint64 energy = 17;
    if (this->energy() != 0) {
        target = ::google::protobuf::internal::WireFormatLite::WriteSInt64ToArray(17, this->energy(), target);
    }

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        target = ::google::protobuf::internal::WireFormat::SerializeUnknownFieldsToArray(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()),
            target);
    }
    // @@protoc_insertion_point(serialize_to_array_end:proio.model.promc.Particle)
    return target;
}

size_t Particle::ByteSizeLong() const {
    // @@protoc_insertion_point(message_byte_size_start:proio.model.promc.Particle)
    size_t total_size = 0;

    if ((_internal_metadata_.have_unknown_fields() &&
         ::google::protobuf::internal::GetProto3PreserveUnknownsDefault())) {
        total_size += ::google::protobuf::internal::WireFormat::ComputeUnknownFieldsSize(
            (::google::protobuf::internal::GetProto3PreserveUnknownsDefault()
                 ? _internal_metadata_.unknown_fields()
                 : _internal_metadata_.default_instance()));
    }
    // repeated uint64 parents = 8;
    {
        size_t data_size = ::google::protobuf::internal::WireFormatLite::UInt64Size(this->parents_);
        if (data_size > 0) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                                  static_cast< ::google::protobuf::int32>(data_size));
        }
        int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _parents_cached_byte_size_ = cached_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        total_size += data_size;
    }

    // repeated uint64 children = 9;
    {
        size_t data_size = ::google::protobuf::internal::WireFormatLite::UInt64Size(this->children_);
        if (data_size > 0) {
            total_size += 1 + ::google::protobuf::internal::WireFormatLite::Int32Size(
                                  static_cast< ::google::protobuf::int32>(data_size));
        }
        int cached_size = ::google::protobuf::internal::ToCachedSize(data_size);
        GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
        _children_cached_byte_size_ = cached_size;
        GOOGLE_SAFE_CONCURRENT_WRITES_END();
        total_size += data_size;
    }

    // uint32 gen_id = 1;
    if (this->gen_id() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(this->gen_id());
    }

    // sint32 pdg_id = 2;
    if (this->pdg_id() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::SInt32Size(this->pdg_id());
    }

    // uint64 mass = 4;
    if (this->mass() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->mass());
    }

    // sint64 Px = 5;
    if (this->px() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::SInt64Size(this->px());
    }

    // sint64 Py = 6;
    if (this->py() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::SInt64Size(this->py());
    }

    // uint32 status = 3;
    if (this->status() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(this->status());
    }

    // sint32 barcode = 10;
    if (this->barcode() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::SInt32Size(this->barcode());
    }

    // sint64 Pz = 7;
    if (this->pz() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::SInt64Size(this->pz());
    }

    // sint32 X = 11;
    if (this->x() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::SInt32Size(this->x());
    }

    // sint32 Y = 12;
    if (this->y() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::SInt32Size(this->y());
    }

    // sint32 Z = 13;
    if (this->z() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::SInt32Size(this->z());
    }

    // uint32 T = 14;
    if (this->t() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt32Size(this->t());
    }

    // uint64 weight = 15;
    if (this->weight() != 0) {
        total_size += 1 + ::google::protobuf::internal::WireFormatLite::UInt64Size(this->weight());
    }

    // sint64 energy = 17;
    if (this->energy() != 0) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::SInt64Size(this->energy());
    }

    // sint32 charge = 16;
    if (this->charge() != 0) {
        total_size += 2 + ::google::protobuf::internal::WireFormatLite::SInt32Size(this->charge());
    }

    int cached_size = ::google::protobuf::internal::ToCachedSize(total_size);
    GOOGLE_SAFE_CONCURRENT_WRITES_BEGIN();
    _cached_size_ = cached_size;
    GOOGLE_SAFE_CONCURRENT_WRITES_END();
    return total_size;
}

void Particle::MergeFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_merge_from_start:proio.model.promc.Particle)
    GOOGLE_DCHECK_NE(&from, this);
    const Particle* source = ::google::protobuf::internal::DynamicCastToGenerated<const Particle>(&from);
    if (source == NULL) {
        // @@protoc_insertion_point(generalized_merge_from_cast_fail:proio.model.promc.Particle)
        ::google::protobuf::internal::ReflectionOps::Merge(from, this);
    } else {
        // @@protoc_insertion_point(generalized_merge_from_cast_success:proio.model.promc.Particle)
        MergeFrom(*source);
    }
}

void Particle::MergeFrom(const Particle& from) {
    // @@protoc_insertion_point(class_specific_merge_from_start:proio.model.promc.Particle)
    GOOGLE_DCHECK_NE(&from, this);
    _internal_metadata_.MergeFrom(from._internal_metadata_);
    ::google::protobuf::uint32 cached_has_bits = 0;
    (void)cached_has_bits;

    parents_.MergeFrom(from.parents_);
    children_.MergeFrom(from.children_);
    if (from.gen_id() != 0) {
        set_gen_id(from.gen_id());
    }
    if (from.pdg_id() != 0) {
        set_pdg_id(from.pdg_id());
    }
    if (from.mass() != 0) {
        set_mass(from.mass());
    }
    if (from.px() != 0) {
        set_px(from.px());
    }
    if (from.py() != 0) {
        set_py(from.py());
    }
    if (from.status() != 0) {
        set_status(from.status());
    }
    if (from.barcode() != 0) {
        set_barcode(from.barcode());
    }
    if (from.pz() != 0) {
        set_pz(from.pz());
    }
    if (from.x() != 0) {
        set_x(from.x());
    }
    if (from.y() != 0) {
        set_y(from.y());
    }
    if (from.z() != 0) {
        set_z(from.z());
    }
    if (from.t() != 0) {
        set_t(from.t());
    }
    if (from.weight() != 0) {
        set_weight(from.weight());
    }
    if (from.energy() != 0) {
        set_energy(from.energy());
    }
    if (from.charge() != 0) {
        set_charge(from.charge());
    }
}

void Particle::CopyFrom(const ::google::protobuf::Message& from) {
    // @@protoc_insertion_point(generalized_copy_from_start:proio.model.promc.Particle)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

void Particle::CopyFrom(const Particle& from) {
    // @@protoc_insertion_point(class_specific_copy_from_start:proio.model.promc.Particle)
    if (&from == this) return;
    Clear();
    MergeFrom(from);
}

bool Particle::IsInitialized() const { return true; }

void Particle::Swap(Particle* other) {
    if (other == this) return;
    InternalSwap(other);
}
void Particle::InternalSwap(Particle* other) {
    using std::swap;
    parents_.InternalSwap(&other->parents_);
    children_.InternalSwap(&other->children_);
    swap(gen_id_, other->gen_id_);
    swap(pdg_id_, other->pdg_id_);
    swap(mass_, other->mass_);
    swap(px_, other->px_);
    swap(py_, other->py_);
    swap(status_, other->status_);
    swap(barcode_, other->barcode_);
    swap(pz_, other->pz_);
    swap(x_, other->x_);
    swap(y_, other->y_);
    swap(z_, other->z_);
    swap(t_, other->t_);
    swap(weight_, other->weight_);
    swap(energy_, other->energy_);
    swap(charge_, other->charge_);
    _internal_metadata_.Swap(&other->_internal_metadata_);
    swap(_cached_size_, other->_cached_size_);
}

::google::protobuf::Metadata Particle::GetMetadata() const {
    protobuf_model_2fpromc_2fpromc_2eproto::protobuf_AssignDescriptorsOnce();
    return protobuf_model_2fpromc_2fpromc_2eproto::file_level_metadata[kIndexInFileMessages];
}

#if PROTOBUF_INLINE_NOT_IN_HEADERS
// Particle

// uint32 gen_id = 1;
void Particle::clear_gen_id() { gen_id_ = 0u; }
::google::protobuf::uint32 Particle::gen_id() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.gen_id)
    return gen_id_;
}
void Particle::set_gen_id(::google::protobuf::uint32 value) {
    gen_id_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.gen_id)
}

// sint32 pdg_id = 2;
void Particle::clear_pdg_id() { pdg_id_ = 0; }
::google::protobuf::int32 Particle::pdg_id() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.pdg_id)
    return pdg_id_;
}
void Particle::set_pdg_id(::google::protobuf::int32 value) {
    pdg_id_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.pdg_id)
}

// uint32 status = 3;
void Particle::clear_status() { status_ = 0u; }
::google::protobuf::uint32 Particle::status() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.status)
    return status_;
}
void Particle::set_status(::google::protobuf::uint32 value) {
    status_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.status)
}

// uint64 mass = 4;
void Particle::clear_mass() { mass_ = GOOGLE_ULONGLONG(0); }
::google::protobuf::uint64 Particle::mass() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.mass)
    return mass_;
}
void Particle::set_mass(::google::protobuf::uint64 value) {
    mass_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.mass)
}

// sint64 Px = 5;
void Particle::clear_px() { px_ = GOOGLE_LONGLONG(0); }
::google::protobuf::int64 Particle::px() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.Px)
    return px_;
}
void Particle::set_px(::google::protobuf::int64 value) {
    px_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.Px)
}

// sint64 Py = 6;
void Particle::clear_py() { py_ = GOOGLE_LONGLONG(0); }
::google::protobuf::int64 Particle::py() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.Py)
    return py_;
}
void Particle::set_py(::google::protobuf::int64 value) {
    py_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.Py)
}

// sint64 Pz = 7;
void Particle::clear_pz() { pz_ = GOOGLE_LONGLONG(0); }
::google::protobuf::int64 Particle::pz() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.Pz)
    return pz_;
}
void Particle::set_pz(::google::protobuf::int64 value) {
    pz_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.Pz)
}

// repeated uint64 parents = 8;
int Particle::parents_size() const { return parents_.size(); }
void Particle::clear_parents() { parents_.Clear(); }
::google::protobuf::uint64 Particle::parents(int index) const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.parents)
    return parents_.Get(index);
}
void Particle::set_parents(int index, ::google::protobuf::uint64 value) {
    parents_.Set(index, value);
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.parents)
}
void Particle::add_parents(::google::protobuf::uint64 value) {
    parents_.Add(value);
    // @@protoc_insertion_point(field_add:proio.model.promc.Particle.parents)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64>& Particle::parents() const {
    // @@protoc_insertion_point(field_list:proio.model.promc.Particle.parents)
    return parents_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64>* Particle::mutable_parents() {
    // @@protoc_insertion_point(field_mutable_list:proio.model.promc.Particle.parents)
    return &parents_;
}

// repeated uint64 children = 9;
int Particle::children_size() const { return children_.size(); }
void Particle::clear_children() { children_.Clear(); }
::google::protobuf::uint64 Particle::children(int index) const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.children)
    return children_.Get(index);
}
void Particle::set_children(int index, ::google::protobuf::uint64 value) {
    children_.Set(index, value);
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.children)
}
void Particle::add_children(::google::protobuf::uint64 value) {
    children_.Add(value);
    // @@protoc_insertion_point(field_add:proio.model.promc.Particle.children)
}
const ::google::protobuf::RepeatedField< ::google::protobuf::uint64>& Particle::children() const {
    // @@protoc_insertion_point(field_list:proio.model.promc.Particle.children)
    return children_;
}
::google::protobuf::RepeatedField< ::google::protobuf::uint64>* Particle::mutable_children() {
    // @@protoc_insertion_point(field_mutable_list:proio.model.promc.Particle.children)
    return &children_;
}

// sint32 barcode = 10;
void Particle::clear_barcode() { barcode_ = 0; }
::google::protobuf::int32 Particle::barcode() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.barcode)
    return barcode_;
}
void Particle::set_barcode(::google::protobuf::int32 value) {
    barcode_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.barcode)
}

// sint32 X = 11;
void Particle::clear_x() { x_ = 0; }
::google::protobuf::int32 Particle::x() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.X)
    return x_;
}
void Particle::set_x(::google::protobuf::int32 value) {
    x_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.X)
}

// sint32 Y = 12;
void Particle::clear_y() { y_ = 0; }
::google::protobuf::int32 Particle::y() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.Y)
    return y_;
}
void Particle::set_y(::google::protobuf::int32 value) {
    y_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.Y)
}

// sint32 Z = 13;
void Particle::clear_z() { z_ = 0; }
::google::protobuf::int32 Particle::z() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.Z)
    return z_;
}
void Particle::set_z(::google::protobuf::int32 value) {
    z_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.Z)
}

// uint32 T = 14;
void Particle::clear_t() { t_ = 0u; }
::google::protobuf::uint32 Particle::t() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.T)
    return t_;
}
void Particle::set_t(::google::protobuf::uint32 value) {
    t_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.T)
}

// uint64 weight = 15;
void Particle::clear_weight() { weight_ = GOOGLE_ULONGLONG(0); }
::google::protobuf::uint64 Particle::weight() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.weight)
    return weight_;
}
void Particle::set_weight(::google::protobuf::uint64 value) {
    weight_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.weight)
}

// sint32 charge = 16;
void Particle::clear_charge() { charge_ = 0; }
::google::protobuf::int32 Particle::charge() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.charge)
    return charge_;
}
void Particle::set_charge(::google::protobuf::int32 value) {
    charge_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.charge)
}

// sint64 energy = 17;
void Particle::clear_energy() { energy_ = GOOGLE_LONGLONG(0); }
::google::protobuf::int64 Particle::energy() const {
    // @@protoc_insertion_point(field_get:proio.model.promc.Particle.energy)
    return energy_;
}
void Particle::set_energy(::google::protobuf::int64 value) {
    energy_ = value;
    // @@protoc_insertion_point(field_set:proio.model.promc.Particle.energy)
}

#endif  // PROTOBUF_INLINE_NOT_IN_HEADERS

// @@protoc_insertion_point(namespace_scope)

}  // namespace promc
}  // namespace model
}  // namespace proio

// @@protoc_insertion_point(global_scope)

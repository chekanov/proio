syntax = "proto3";
package proio.model.promc;
option go_package = "github.com/decibelcooper/proio/go-proio/model/promc";
option java_package = "proio.model";
option java_outer_classname = "Promc";
import "proio/model/proio.proto";

// DATA MODEL MESSAGES
// Each message type must be accompanied by one with the identical name
// suffixed with Collection with an "entries" field.  Both message and it's
// colleciton message must have the field "id".

message Particle {
	uint32 id = 1; // For proio referencing
	uint32 gen_id = 2; // ID in the generator
	sint32 pdg_id = 3; // unique integer ID specifying the particle type
	uint32 status = 4; // integer specifying the particleâ€™s status (i.e. decayed or not)
	uint64 mass = 5; // mass
	sint64 Px = 6; // pX
	sint64 Py = 7; // pY
	sint64 Pz = 8; // pZ
	repeated Reference parents = 9; // list of parents
	repeated Reference children = 10; // list of children
	sint32 barcode = 11; // barcode if used
	sint32 X = 12; // vertex X position
	sint32 Y = 13; // vertex Y position
	sint32 Z = 14; // vertex Z position
	uint32 T = 15; // time
	uint64 weight = 16; // particle weight
	sint32 charge = 17; // Charge
	sint64 energy = 18; // Energy
}

message ParticleCollection {
	uint32 id = 1; // For proio referencing
	uint32 flags = 2;
	Params params = 3;
	repeated Particle entries = 4;
}
